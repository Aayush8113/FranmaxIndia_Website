{"version":3,"file":"static/js/2867.2088162f.chunk.js","mappings":"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","sources":["admin/MarketingInquiries.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './marketing.css';\r\nimport Sidebar from './Sidebar';\r\nimport { getApiUrl } from '../utils/api'; // ✅ Import helper\r\n\r\nconst MarketingInquiries = () => {\r\n    const [inquiries, setInquiries] = useState([]);\r\n    const [show, setShow] = useState({});\r\n    const roleId = 1; // Replace with session or context\r\n    const userId = 1; // Replace with session or context\r\n\r\n    useEffect(() => {\r\n        fetch(getApiUrl('get-marketing-inquiries.php')) // ✅ Use helper\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.status === \"success\") {\r\n                    setInquiries(data.inquiries);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    const toggle = async (id, field) => {\r\n        const alreadyShown = show[id]?.[field];\r\n\r\n        if (!alreadyShown) {\r\n            try {\r\n                await fetch(getApiUrl('log-marketing-view.php'), { // ✅ Use helper\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        inquiry_id: id,\r\n                        role_id: roleId,\r\n                        user_id: userId,\r\n                        field: field\r\n                    }),\r\n                });\r\n\r\n                setShow(prev => ({\r\n                    ...prev,\r\n                    [id]: {\r\n                        ...prev[id],\r\n                        [field]: true\r\n                    }\r\n                }));\r\n\r\n            } catch (err) {\r\n                console.error(\"Failed to log view:\", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"snb-marketing-page\">\r\n            <Sidebar />\r\n            <div className=\"snb-marketing-content\">\r\n                <h2 className=\"snb-marketing-title\">Marketing Inquiries</h2>\r\n                <div className=\"snb-marketing-table-wrapper\">\r\n                    <table className=\"snb-marketing-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Brand</th>\r\n                                <th>State</th>\r\n                                <th>City</th>\r\n                                <th>Services</th>\r\n                                <th>Contact</th>\r\n                                <th>Email</th>\r\n                                <th>Inquiry Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {inquiries.map((inq, idx) => (\r\n                                <tr key={inq.id}>\r\n                                    <td>{idx + 1}</td>\r\n                                    <td>{inq.name}</td>\r\n                                    <td>{inq.brand_name}</td>\r\n                                    <td>{inq.state_name}</td>\r\n                                    <td>{inq.city_name}</td>\r\n                                    <td>{inq.services}</td>\r\n                                    <td>\r\n                                        {show[inq.id]?.contact ? (\r\n                                            inq.contact\r\n                                        ) : (\r\n                                            <button onClick={() => toggle(inq.id, \"contact\")} className=\"snb-show-btn\">Show</button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {show[inq.id]?.email ? (\r\n                                            inq.email\r\n                                        ) : (\r\n                                            <button onClick={() => toggle(inq.id, \"email\")} className=\"snb-show-btn\">Show</button>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>{inq.created_at}</td>\r\n                                </tr>\r\n                            ))}\r\n                            {inquiries.length === 0 && (\r\n                                <tr><td colSpan=\"9\" style={{ textAlign: 'center' }}>No inquiries found.</td></tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketingInquiries;\r\n"],"names":["MarketingInquiries","inquiries","setInquiries","useState","show","setShow","useEffect","fetch","getApiUrl","then","res","json","data","status","toggle","async","id","field","_show$id","method","headers","body","JSON","stringify","inquiry_id","role_id","user_id","prev","_objectSpread","err","console","error","_jsxs","className","children","_jsx","Sidebar","map","inq","idx","_show$inq$id","_show$inq$id2","name","brand_name","state_name","city_name","services","contact","onClick","email","created_at","length","colSpan","style","textAlign"],"sourceRoot":""}