{"version":3,"file":"static/js/6599.794b94a1.chunk.js","mappings":"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","sources":["admin/AddInvestorForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { FaUser, FaPhone, FaEnvelope, FaMapMarkerAlt, FaCity, FaInfoCircle, FaMoneyBillWave } from 'react-icons/fa';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport './AddInvestorForm.css';\r\nimport './DashboardLayout.css';\r\nimport Sidebar from './Sidebar';\r\n\r\n// Import the API helper function\r\nimport { getApiUrl } from '../utils/api';\r\n\r\n// Options for the Status dropdown\r\nconst statusOptions = [\r\n  { value: 'active', label: 'Active' },\r\n  { value: 'not_active', label: 'Not Active' },\r\n];\r\n\r\nconst validateForm = (form, selectedState, selectedCity, paymentStatus, selectedStatus, paymentAmount) => {\r\n  if (!form.name || form.name.trim() === '') {\r\n    toast.error(\"Name is required.\");\r\n    return false;\r\n  }\r\n  if (!form.number || !/^\\d{10}$/.test(form.number)) {\r\n    toast.error(\"A valid 10-digit mobile number is required.\");\r\n    return false;\r\n  }\r\n  if (!form.email || !/\\S+@\\S+\\.\\S+/.test(form.email)) {\r\n    toast.error(\"A valid email address is required.\");\r\n    return false;\r\n  }\r\n  if (!selectedState) {\r\n    toast.error(\"Please select a state.\");\r\n    return false;\r\n  }\r\n  if (!selectedCity) {\r\n    toast.error(\"Please select a city.\");\r\n    return false;\r\n  }\r\n  if (!selectedStatus) {\r\n    toast.error(\"Please select a status.\");\r\n    return false;\r\n  }\r\n  if (!paymentStatus) {\r\n    toast.error(\"Please select payment status.\");\r\n    return false;\r\n  }\r\n  if (!paymentAmount || isNaN(paymentAmount) || paymentAmount <= 0) {\r\n    toast.error(\"A valid payment amount is required.\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default function AddInvestorForm() {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    number: '',\r\n    email: '',\r\n    paymentAmount: ''\r\n  });\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedStatus, setSelectedStatus] = useState(null);\r\n  const [paymentStatus, setPaymentStatus] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Use the getApiUrl helper for fetching states\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const formatted = data.map(state => ({ value: state.id, label: state.name }));\r\n        setStates(formatted);\r\n      })\r\n      .catch(err => toast.error(\"Failed to load states.\"));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedState) {\r\n      // Use the getApiUrl helper for fetching cities\r\n      fetch(`${getApiUrl('get-cities.php')}?state_id=${selectedState.value}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const formatted = data.map(city => ({ value: city.id, label: city.name }));\r\n          setCities(formatted);\r\n        })\r\n        .catch(err => toast.error(\"Failed to load cities.\"));\r\n    } else {\r\n      setCities([]);\r\n      setSelectedCity(null);\r\n    }\r\n  }, [selectedState]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    if (!validateForm(form, selectedState, selectedCity, paymentStatus, selectedStatus, form.paymentAmount)) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    const payload = {\r\n      investor_name: form.name,\r\n      investor_mobile: form.number,\r\n      investor_email: form.email,\r\n      state_id: selectedState.value,\r\n      city_id: selectedCity.value,\r\n      status: selectedStatus.value,\r\n      payment_amount: form.paymentAmount,\r\n      payment_received: paymentStatus === 'yes' ? 1 : 0\r\n    };\r\n\r\n    try {\r\n      // Use the getApiUrl helper for adding an investor\r\n      const res = await fetch(getApiUrl('add-offline-investor.php'), {\r\n       method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.success) {\r\n        toast.success(\"Investor added successfully!\");\r\n        setForm({ name: '', number: '', email: '', paymentAmount: '' });\r\n        setSelectedState(null);\r\n        setSelectedCity(null);\r\n        setSelectedStatus(null);\r\n        setPaymentStatus(null);\r\n      } else {\r\n        toast.error(data.message || \"Failed to add investor.\");\r\n      }\r\n    } catch (err) {\r\n      toast.error(\"ðŸš« Server error. Please try again.\");\r\n      console.error(err);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <ToastContainer position=\"top-right\" autoClose={3000} />\r\n        <div className=\"add-investor-page\">\r\n          <div className=\"add-investor-container\">\r\n            <h2 className=\"form-title\">Add New Investor</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              \r\n              {/* Row 1: Name and Email */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <FaUser className=\"form-icon\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={form.name}\r\n                    onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <FaEnvelope className=\"form-icon\" />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={form.email}\r\n                    onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Row 2: Mobile Number and State */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                  <FaPhone className=\"form-icon\" />\r\n                  <input\r\n                    type=\"tel\"\r\n                    placeholder=\"Mobile Number\"\r\n                    value={form.number}\r\n                    onChange={(e) => setForm({ ...form, number: e.target.value })}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group select-group\">\r\n                  <FaMapMarkerAlt className=\"form-icon\" />\r\n                  <Select\r\n                    options={states}\r\n                    value={selectedState}\r\n                    onChange={setSelectedState}\r\n                    placeholder=\"Select State\"\r\n                    classNamePrefix=\"react-select\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Row 3: City and Status */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group select-group\">\r\n                  <FaCity className=\"form-icon\" />\r\n                  <Select\r\n                    options={cities}\r\n                    value={selectedCity}\r\n                    onChange={setSelectedCity}\r\n                    placeholder=\"Select City\"\r\n                    isDisabled={!selectedState}\r\n                    classNamePrefix=\"react-select\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group select-group\">\r\n                  <FaInfoCircle className=\"form-icon\" />\r\n                  <Select\r\n                    options={statusOptions}\r\n                    value={selectedStatus}\r\n                    onChange={setSelectedStatus}\r\n                    placeholder=\"Select Status\"\r\n                    classNamePrefix=\"react-select\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Single fields on separate lines */}\r\n              <div className=\"form-group\">\r\n                <FaMoneyBillWave className=\"form-icon\" />\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Payment Amount\"\r\n                  value={form.paymentAmount}\r\n                  onChange={(e) => setForm({ ...form, paymentAmount: e.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group radio-group\">\r\n                <label className=\"radio-label\">Payment Received:</label>\r\n                <div className=\"radio-options\">\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"yes\"\r\n                      checked={paymentStatus === 'yes'}\r\n                      onChange={(e) => setPaymentStatus(e.target.value)}\r\n                    />\r\n                    Yes\r\n                  </label>\r\n                  <label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value=\"no\"\r\n                      checked={paymentStatus === 'no'}\r\n                      onChange={(e) => setPaymentStatus(e.target.value)}\r\n                    />\r\n                    No\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting}>\r\n                {isSubmitting ? 'Adding...' : 'Add Investor'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["statusOptions","value","label","validateForm","form","selectedState","selectedCity","paymentStatus","selectedStatus","paymentAmount","name","trim","number","test","email","isNaN","toast","error","AddInvestorForm","states","setStates","useState","cities","setCities","setForm","setSelectedState","setSelectedCity","setSelectedStatus","setPaymentStatus","isSubmitting","setIsSubmitting","useEffect","fetch","getApiUrl","then","res","json","data","formatted","map","state","id","catch","err","concat","city","_jsxs","className","children","_jsx","Sidebar","ToastContainer","position","autoClose","onSubmit","async","e","preventDefault","payload","investor_name","investor_mobile","investor_email","state_id","city_id","status","payment_amount","payment_received","method","headers","body","JSON","stringify","success","message","console","FaUser","type","placeholder","onChange","_objectSpread","target","FaEnvelope","FaPhone","FaMapMarkerAlt","Select","options","classNamePrefix","FaCity","isDisabled","FaInfoCircle","FaMoneyBillWave","checked","disabled"],"sourceRoot":""}