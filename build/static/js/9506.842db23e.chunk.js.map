{"version":3,"file":"static/js/9506.842db23e.chunk.js","mappings":"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","sources":["admin/AddUserModal.jsx","admin/UserList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { getApiUrl } from '../utils/api';\r\nimport './AddUserModal.css';\r\n\r\nexport default function AddUserModal({ isOpen, onClose, onSave }) {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        status: 'active',\r\n        permissions: [],\r\n    });\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false); // New state for password visibility\r\n\r\n    const availablePermissions = [\r\n        'view_dashboard',\r\n        'view_users', 'add_users', 'edit_users',\r\n        'view_brands', 'add_brands', 'edit_brands',\r\n        'view_investors', 'add_investors', 'view_leads',\r\n        'view_marketing_inquiries', 'view_buy_business_inquiries',\r\n        'view_brand_inquiries', 'view_brand_dashboard', 'view_brand_profile', 'upload_brand_docs',\r\n        'view_sell_business_inquiries',\r\n        'view_lease_properties',\r\n        'view_partner_inquiries',\r\n        'view_newsletter',\r\n        \"view_faq\",\r\n        \"view_events\",\r\n        \"view_inhouse_brand\",\r\n        \"add_inhouse_brand\",\r\n        \"view_inhouse_investor\",\r\n        \"add_inhouse_investor\"\r\n\r\n        // New permission added for partner inquiries\r\n        // Added the new permission from the previous context\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setFormData({\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                status: 'active',\r\n                permissions: [],\r\n            });\r\n            setShowPassword(false); // Reset password visibility when the modal opens\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handlePermissionChange = (e) => {\r\n        const { value, checked } = e.target;\r\n        setFormData(prev => {\r\n            const currentPermissions = prev.permissions;\r\n            if (checked) {\r\n                return { ...prev, permissions: [...currentPermissions, value] };\r\n            } else {\r\n                return { ...prev, permissions: currentPermissions.filter(p => p !== value) };\r\n            }\r\n        });\r\n    };\r\n\r\n    // New function to toggle password visibility\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        const { name, email, password, status, permissions } = formData;\r\n        if (!name || !email || !password || !status) {\r\n            toast.error('All fields (except permissions) are required.');\r\n            return;\r\n        }\r\n\r\n        if (isSubmitting) {\r\n            return;\r\n        }\r\n        setIsSubmitting(true);\r\n\r\n        const dataToSend = {\r\n            name,\r\n            email,\r\n            password,\r\n            status,\r\n            permissions,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(getApiUrl('add-user.php'), {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(dataToSend),\r\n            });\r\n\r\n            const responseText = await response.text();\r\n            const result = JSON.parse(responseText);\r\n\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n                onSave();\r\n                onClose();\r\n            } else {\r\n                toast.error(result.message || 'Failed to add user.');\r\n            }\r\n        } catch (e) {\r\n            toast.error('API error adding user: ' + e.message);\r\n            console.error('AddUserModal: Error during API call:', e);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"modal-overlay\">\r\n            <div className=\"add-user-modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>Add New User</h3>\r\n                    <button className=\"close-btn\" onClick={onClose} disabled={isSubmitting}>&times;</button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter user's name\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter user's email\"\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group password-group\"> {/* Added a wrapper for the password field */}\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className=\"password-input-wrapper\">\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                value={formData.password}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Enter password\"\r\n                                required\r\n                                disabled={isSubmitting}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"password-toggle-btn\"\r\n                                onClick={togglePasswordVisibility}\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                {showPassword ? (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye-off\"><path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\" /><path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\" /><path d=\"M6.61 6.61A13.52 13.52 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\" /><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\" /></svg>\r\n                                ) : (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-eye\"><path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\" /><circle cx=\"12\" cy=\"12\" r=\"3\" /></svg>\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"status\">Status</label>\r\n                        <select\r\n                            id=\"status\"\r\n                            name=\"status\"\r\n                            value={formData.status}\r\n                            onChange={handleChange}\r\n                            required\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            <option value=\"active\">Active</option>\r\n                            <option value=\"not active\">Not Active</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group permissions-group\">\r\n                        <label>Permissions</label>\r\n                        <div className=\"permissions-grid\">\r\n                            {availablePermissions.map(permission => (\r\n                                <div key={permission} className=\"permission-item\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id={`perm-${permission}`}\r\n                                        name=\"permissions\"\r\n                                        value={permission}\r\n                                        checked={formData.permissions.includes(permission)}\r\n                                        onChange={handlePermissionChange}\r\n                                        disabled={isSubmitting}\r\n                                    />\r\n                                    <label htmlFor={`perm-${permission}`}>{permission.replace(/_/g, ' ')}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"save-btn\" onClick={handleSaveClick} disabled={isSubmitting}>\r\n                        {isSubmitting ? 'Saving...' : 'Save User'}\r\n                    </button>\r\n                    <button className=\"cancel-btn\" onClick={onClose} disabled={isSubmitting}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { \r\n  FaUserCircle, FaEnvelope, FaLock, FaCheckCircle, FaTimesCircle, \r\n  FaSignInAlt, FaPlus, FaEdit, FaSave, FaTimes // Added edit, save, cancel icons\r\n} from 'react-icons/fa';\r\n\r\nimport { getApiUrl } from '../utils/api'; \r\nimport Sidebar from './Sidebar'; \r\nimport AddUserModal from './AddUserModal'; \r\n\r\nimport './UserList.css'; \r\n\r\nexport default function UserList() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\r\n\r\n  // State for the new user form (for AddUserModal)\r\n  const [newUserForm, setNewUserForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    status: 'active', // Default status\r\n  });\r\n\r\n  // States for editing an existing user\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [editableUserName, setEditableUserName] = useState('');\r\n  const [editableUserEmail, setEditableUserEmail] = useState('');\r\n  const [editableUserStatus, setEditableUserStatus] = useState('');\r\n\r\n  // Function to fetch users from the API\r\n  const fetchUsers = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(getApiUrl('get-users.php')); \r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        setUsers(result.data);\r\n        toast.success('Users loaded successfully!');\r\n      } else {\r\n        toast.error(result.message || 'Failed to fetch users.');\r\n        setError(result.message || 'Failed to fetch users.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('Network error or API issue: ' + e.message);\r\n      setError('Network error or API issue: ' + e.message);\r\n      console.error('Error fetching users:', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUsers(); \r\n  }, [fetchUsers]);\r\n\r\n  // Handler for new user form changes (for AddUserModal)\r\n  const handleNewUserFormChange = (e) => {\r\n    setNewUserForm({ ...newUserForm, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handler for adding a new user (called by AddUserModal)\r\n  const handleAddUserSubmit = async () => {\r\n    const { name, email, password, status } = newUserForm;\r\n    if (!name || !email || !password || !status) {\r\n      toast.error('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(getApiUrl('add-user.php'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUserForm),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success(result.message);\r\n        setShowAddUserModal(false); // Close modal\r\n        setNewUserForm({ // Reset form\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          status: 'active',\r\n        });\r\n        fetchUsers(); // Refresh user list\r\n      } else {\r\n        toast.error(result.message || 'Failed to add user.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('API error adding user: ' + e.message);\r\n      console.error('Error adding user:', e);\r\n    }\r\n  };\r\n\r\n  // Handlers for editing existing users\r\n  const handleEditClick = (user) => {\r\n    setEditingUserId(user.id);\r\n    setEditableUserName(user.name);\r\n    setEditableUserEmail(user.email);\r\n    setEditableUserStatus(user.status);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingUserId(null); // Exit edit mode\r\n    setEditableUserName('');\r\n    setEditableUserEmail('');\r\n    setEditableUserStatus('');\r\n  };\r\n\r\n  const handleSaveUser = async (userId) => {\r\n    // Basic validation for editable fields\r\n    if (!editableUserName || !editableUserEmail || !editableUserStatus) {\r\n      toast.error('Name, Email, and Status cannot be empty.');\r\n      return;\r\n    }\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(editableUserEmail)) {\r\n      toast.error('Please enter a valid email address.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(getApiUrl('update-user.php'), { // Call the new update API\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: userId,\r\n          name: editableUserName,\r\n          email: editableUserEmail,\r\n          status: editableUserStatus,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        toast.success(result.message);\r\n        fetchUsers(); // Refresh the list to show updated data\r\n        handleCancelEdit(); // Exit edit mode\r\n      } else {\r\n        toast.error(result.message || 'Failed to update user.');\r\n      }\r\n    } catch (e) {\r\n      toast.error('API error updating user: ' + e.message);\r\n      console.error('Error updating user:', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Sidebar />\r\n      \r\n      <div className=\"main-content user-list-container\">\r\n        <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n\r\n        <div className=\"user-list-header\">\r\n          <h2 className=\"user-list-title\">User List</h2>\r\n          <button className=\"add-user-btn\" onClick={() => setShowAddUserModal(true)}>\r\n            <FaPlus /> Add User\r\n          </button>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"status-message loading-message\">Loading users...</div>\r\n        ) : error ? (\r\n          <div className=\"status-message error-message\">Error: {error}</div>\r\n        ) : users.length === 0 ? (\r\n          <div className=\"status-message no-data-message\">No users found.</div>\r\n        ) : (\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th><FaEnvelope className=\"table-icon\" /> Email</th>\r\n                  <th><FaUserCircle className=\"table-icon\" /> Name</th>\r\n                  <th><FaLock className=\"table-icon\" /> Password</th>\r\n                  <th><FaCheckCircle className=\"table-icon\" /> Status</th>\r\n                  <th><FaSignInAlt className=\"table-icon\" /> Created At</th>\r\n                  <th>Actions</th> {/* New column for actions */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <input \r\n                          type=\"email\" \r\n                          value={editableUserEmail} \r\n                          onChange={(e) => setEditableUserEmail(e.target.value)} \r\n                          className=\"editable-input\"\r\n                        />\r\n                      ) : (\r\n                        user.email\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <input \r\n                          type=\"text\" \r\n                          value={editableUserName} \r\n                          onChange={(e) => setEditableUserName(e.target.value)} \r\n                          className=\"editable-input\"\r\n                        />\r\n                      ) : (\r\n                        user.name\r\n                      )}\r\n                    </td>\r\n                    <td>********</td> {/* Password is not editable */}\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <select \r\n                          value={editableUserStatus} \r\n                          onChange={(e) => setEditableUserStatus(e.target.value)}\r\n                          className=\"editable-select\"\r\n                        >\r\n                          <option value=\"active\">Active</option>\r\n                          <option value=\"not active\">Not Active</option>\r\n                        </select>\r\n                      ) : (\r\n                        <span className={`status-badge ${user.status === 'active' ? 'status-active' : 'status-inactive'}`}>\r\n                          {user.status}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td>{user.created_at || 'N/A'}</td>\r\n                    <td>\r\n                      {editingUserId === user.id ? (\r\n                        <>\r\n                          <button \r\n                            className=\"action-btn save-btn\" \r\n                            onClick={() => handleSaveUser(user.id)}\r\n                            title=\"Save Changes\"\r\n                          >\r\n                            <FaSave />\r\n                          </button>\r\n                          <button \r\n                            className=\"action-btn cancel-btn\" \r\n                            onClick={handleCancelEdit}\r\n                            title=\"Cancel Edit\"\r\n                          >\r\n                            <FaTimes />\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <button \r\n                          className=\"action-btn edit-btn\" \r\n                          onClick={() => handleEditClick(user)}\r\n                          title=\"Edit User\"\r\n                        >\r\n                          <FaEdit />\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        {showAddUserModal && (\r\n          <AddUserModal\r\n            isOpen={showAddUserModal}\r\n            onClose={() => setShowAddUserModal(false)}\r\n            onSave={handleAddUserSubmit}\r\n            form={newUserForm}\r\n            handleFormChange={handleNewUserFormChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AddUserModal","_ref","isOpen","onClose","onSave","formData","setFormData","useState","name","email","password","status","permissions","isSubmitting","setIsSubmitting","showPassword","setShowPassword","useEffect","handleChange","e","value","target","prev","_objectSpread","handlePermissionChange","checked","currentPermissions","filter","p","_jsx","className","children","_jsxs","onClick","disabled","htmlFor","type","id","onChange","placeholder","required","togglePasswordVisibility","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","x2","y1","y2","cx","cy","r","map","permission","concat","includes","replace","async","toast","error","dataToSend","response","fetch","getApiUrl","method","headers","body","JSON","stringify","responseText","text","result","parse","success","message","console","UserList","users","setUsers","loading","setLoading","setError","showAddUserModal","setShowAddUserModal","newUserForm","setNewUserForm","editingUserId","setEditingUserId","editableUserName","setEditableUserName","editableUserEmail","setEditableUserEmail","editableUserStatus","setEditableUserStatus","fetchUsers","useCallback","ok","errorData","json","Error","data","handleCancelEdit","Sidebar","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","FaPlus","length","FaEnvelope","FaUserCircle","FaLock","FaCheckCircle","FaSignInAlt","user","created_at","_Fragment","test","userId","handleSaveUser","title","FaSave","FaTimes","handleEditClick","FaEdit","form","handleFormChange"],"sourceRoot":""}