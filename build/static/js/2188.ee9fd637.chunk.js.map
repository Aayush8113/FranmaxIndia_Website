{"version":3,"file":"static/js/2188.ee9fd637.chunk.js","mappings":"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","sources":["components/TopBrands.jsx","components/BannerCarousel.jsx","components/NewsModal.jsx","components/NewsSection.jsx","components/SellYourBusinessCards.jsx","components/LeasePropertiesDisplay.jsx","pages/HomePage.js","components/FranchiseListing.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./design/TopBrands.css\";\r\nimport { getImageUrl, getApiUrl } from \"../utils/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst TopBrands = ({\r\n  apiUrl = getApiUrl(\"get-premium-brands.php\"),\r\n  sectionTitle = \"Top Franchising Opportunities\",\r\n  viewAllLink = \"/franchises\",\r\n}) => {\r\n  const [brands, setBrands] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const cardGridRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Currency formatter\r\n  const formatIndianCurrency = (number) => {\r\n    if (!number || isNaN(number)) return \"—\";\r\n    if (number >= 10000000) return `${(number / 10000000).toFixed(1)} cr`;\r\n    if (number >= 100000) return `${Math.round(number / 100000)} lacs`;\r\n    return number.toLocaleString(\"en-IN\");\r\n  };\r\n\r\n  // Fetch brands\r\n  useEffect(() => {\r\n    const fetchBrands = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(apiUrl);\r\n        const data = await res.json();\r\n        if (data.success && Array.isArray(data.brands)) {\r\n          const unique = data.brands.filter(\r\n            (b, i, arr) => arr.findIndex((x) => x.id === b.id) === i\r\n          );\r\n          setBrands(unique);\r\n        } else setBrands([]);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setBrands([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (apiUrl) fetchBrands();\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [apiUrl]);\r\n\r\n  const handleKnowMore = (id) => navigate(`/brand/${id}`);\r\n\r\n  // Infinite auto-scroll\r\n  useEffect(() => {\r\n    if (!cardGridRef.current || brands.length === 0 || loading) return;\r\n    const grid = cardGridRef.current;\r\n    const cards = grid.querySelectorAll(\".syb-card\");\r\n    if (!cards.length) return;\r\n    const cardWidth = cards[0].offsetWidth + 15;\r\n\r\n    // Duplicate first and last for infinite loop\r\n    const totalCards = brands.length;\r\n\r\n    // Start at first real card\r\n    grid.scrollLeft = cardWidth;\r\n\r\n    const handleScroll = () => {\r\n      if (grid.scrollLeft <= 0) {\r\n        grid.scrollLeft = totalCards * cardWidth;\r\n      } else if (grid.scrollLeft >= cardWidth * (totalCards + 1)) {\r\n        grid.scrollLeft = cardWidth;\r\n      }\r\n    };\r\n\r\n    grid.addEventListener(\"scroll\", handleScroll);\r\n\r\n    intervalRef.current = setInterval(() => {\r\n      grid.scrollBy({ left: cardWidth, behavior: \"smooth\" });\r\n    }, 4000);\r\n\r\n    return () => {\r\n      clearInterval(intervalRef.current);\r\n      grid.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [brands, loading]);\r\n\r\n  // Render single card\r\n  const renderCard = (brand, i) => (\r\n    <div\r\n      className=\"syb-card\"\r\n      key={`${brand.id}-${i}`}\r\n      onClick={() => handleKnowMore(brand.id)}\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <div className=\"syb-img-wrap\">\r\n        <img src={getImageUrl(brand.logo)} alt={brand.name} />\r\n      </div>\r\n      <div className=\"syb-content\">\r\n        <h3>{brand.name}</h3>\r\n        <div className=\"syb-detail\">\r\n          <div className=\"biz-field\">\r\n            <span className=\"label\">Sector:</span>\r\n            <span className=\"value\">{brand.sector || \"—\"}</span>\r\n          </div>\r\n          <div className=\"biz-field\">\r\n            <span className=\"label\">Investment:</span>\r\n            <span className=\"value\">\r\n              ₹{formatIndianCurrency(brand.min_investment)} –{\" \"}\r\n              {formatIndianCurrency(brand.max_investment)}\r\n            </span>\r\n          </div>\r\n          <div className=\"biz-field\">\r\n            <span className=\"label\">Area:</span>\r\n            <span className=\"value\">\r\n              {brand.min_area} – {brand.max_area} sq.ft\r\n            </span>\r\n          </div>\r\n          <div className=\"biz-field\">\r\n            <span className=\"label\">Outlets:</span>\r\n            <span className=\"value\">{brand.total_outlets}</span>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"syb-btn\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleKnowMore(brand.id);\r\n          }}\r\n        >\r\n          Know More\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Render infinite cards: clone last at start and first at end\r\n  const renderBrands = () => {\r\n    if (!brands.length) return null;\r\n    const first = brands[0];\r\n    const last = brands[brands.length - 1];\r\n    const looped = [last, ...brands, first];\r\n    return looped.map((brand, i) => renderCard(brand, i));\r\n  };\r\n\r\n  return (\r\n    <div className=\"syb-wrapper\">\r\n      <div className=\"syb-heading-row\">\r\n        {brands.length >= 1 && <h2 className=\"syb-heading\">{sectionTitle}</h2>}\r\n        {brands.length >= 1 && (\r\n          <a href={viewAllLink} className=\"syb-view-all\">\r\n            View All\r\n          </a>\r\n        )}\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"syb-loading\">Loading opportunities...</div>\r\n      ) : (\r\n        <div className=\"syb-carousel-container\">\r\n          <div className=\"syb-grid\" ref={cardGridRef}>\r\n            {renderBrands()}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBrands;\r\n","// src/components/BannerCarousel.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../components/design/BannerCarousel.css';\r\nimport axios from 'axios';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst BannerCarousel = () => {\r\n  const [banners, setBanners] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // Fetch banner data from PHP API\r\n  useEffect(() => {\r\n    axios.get(getApiUrl('get-banner.php'))\r\n      .then(response => {\r\n        // Assuming the API response data is an array\r\n        console.log(response);\r\n        setBanners(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Failed to load banners:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Auto-slide every 4 seconds\r\n  useEffect(() => {\r\n    if (banners.length > 1) { // Only set interval if there's more than one banner\r\n      const interval = setInterval(() => {\r\n        setCurrentIndex((prevIndex) =>\r\n          prevIndex === banners.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      }, 4000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [banners]);\r\n\r\n  if (banners.length === 0) {\r\n    return <div className=\"carousel\">Loading banners...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      {banners.map((banner, index) => (\r\n        <div\r\n          key={banner.id}\r\n          className={`carousel-slide ${index === currentIndex ? 'active' : ''}`}\r\n        >\r\n          <a\r\n            href=\"https://franxpo.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"banner-link\"\r\n          >\r\n            <img src={banner.image_url} alt={banner.title} />\r\n          </a>\r\n          <div className=\"carousel-caption\">\r\n            <h3>{banner.title}</h3>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BannerCarousel;","// src/components/NewsModal.jsx\r\nimport React from 'react';\r\nimport DOMPurify from 'dompurify';\r\nimport './design/NewsModal.css';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { getImageUrl } from '../utils/api';\r\n\r\nconst NewsModal = ({ news, onClose }) => {\r\n  // Sanitize the HTML content\r\n  const sanitizedDescription = DOMPurify.sanitize(news.description || '');\r\n\r\n  return (\r\n    <div className=\"news-modal-backdrop\">\r\n      <div className=\"news-modal\">\r\n        <button className=\"modal-close-btn\" onClick={onClose}>\r\n          <FaTimes />\r\n        </button>\r\n\r\n        {news.image && <img className=\"modal-image\" src={getImageUrl(news.image)} alt={news.title} />}\r\n        <h2 className=\"modal-title\">{news.title}</h2>\r\n        <p className=\"modal-date\">{new Date(news.created_at).toLocaleDateString()}</p>\r\n\r\n        {/* Render sanitized HTML safely */}\r\n        <div\r\n          className=\"modal-content\"\r\n          dangerouslySetInnerHTML={{ __html: sanitizedDescription }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsModal;\r\n","// src/components/NewsSection.jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport './design/NewsSection.css';\r\nimport NewsModal from './NewsModal';\r\nimport { getApiUrl, getImageUrl } from '../utils/api';\r\n\r\nconst NewsSection = () => {\r\n  const [news, setNews] = useState([]);\r\n  const [visibleIndex, setVisibleIndex] = useState(0);\r\n  const [selectedNews, setSelectedNews] = useState(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n      try {\r\n        const res = await fetch(getApiUrl('get-news.php'));\r\n        const data = await res.json();\r\n        if (data.success) {\r\n          setNews(data.news);\r\n        }\r\n      } catch (err) {\r\n        console.error('Failed to fetch news:', err);\r\n      }\r\n    };\r\n    fetchNews();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (news.length > 3) {\r\n      intervalRef.current = setInterval(() => {\r\n        setVisibleIndex((prev) => (prev + 1) % news.length);\r\n      }, 3000);\r\n    }\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [news]);\r\n\r\n  const getVisibleNews = () => {\r\n    if (news.length <= 3) return news;\r\n    return [\r\n      news[visibleIndex % news.length],\r\n      news[(visibleIndex + 1) % news.length],\r\n      news[(visibleIndex + 2) % news.length]\r\n    ];\r\n  };\r\n\r\n  const formatDate = (dateStr) => {\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'long',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"news-section\">\r\n      {news.length > 0 && (\r\n        <>\r\n          <h2 className=\"news-heading\">Latest News & Updates</h2>\r\n          <p className=\"news-subheading\">\r\n            Stay informed with our recent activities and announcements\r\n          </p>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"news-card-container\">\r\n        {getVisibleNews().map((item, index) => (\r\n          <div className=\"news-card\" key={index}>\r\n            <div className=\"news-img\">\r\n              <div className=\"image-wrapper\">\r\n                <img src={getImageUrl(item.image)} alt={item.title || \"Brand Image\"} />\r\n              </div>\r\n            </div>\r\n            <div className=\"news-content\">\r\n              <h3 className=\"news-title\">{item.title}</h3>\r\n              <p className=\"news-date\">{formatDate(item.created_at)}</p>\r\n              <button className=\"news-btn\" onClick={() => setSelectedNews(item)}>\r\n                Read More\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedNews && (\r\n        <NewsModal\r\n          news={selectedNews}\r\n          onClose={() => setSelectedNews(null)}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewsSection;\r\n","// import React, { useEffect, useState, useRef } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './design/SellYourBusinessCards.css';\r\n// import { getApiUrl , getImageUrl } from '../utils/api';\r\n\r\n// const SellBusinessCards = () => {\r\n//   const [cards, setCards] = useState([]);\r\n//   const [visibleCards, setVisibleCards] = useState([]);\r\n//   const currentIndex = useRef(0);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     fetch(getApiUrl(\"get-sell-business.php\"))\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         if (data.success && Array.isArray(data.cards) && data.cards.length > 0) {\r\n//           const unique = [];\r\n//           const seen = new Set();\r\n//           for (const card of data.cards) {\r\n//             const key = card.full_name + card.email;\r\n//             if (!seen.has(key)) {\r\n//               seen.add(key);\r\n//               unique.push(card);\r\n//             }\r\n//           }\r\n//           setCards(unique);\r\n//           setVisibleCards(unique.slice(0, 3));\r\n//           currentIndex.current = 3;\r\n//         }\r\n//       });\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (cards.length === 0) return;\r\n\r\n//     const interval = setInterval(() => {\r\n//       setVisibleCards((prev) => {\r\n//         if (cards.length === 0) return [];\r\n\r\n//         if (currentIndex.current >= cards.length) {\r\n//           currentIndex.current = 0;\r\n//         }\r\n\r\n//         const next = [...prev.slice(1), cards[currentIndex.current]];\r\n//         currentIndex.current += 1;\r\n//         return next;\r\n//       });\r\n//     }, 3000);\r\n\r\n//     return () => clearInterval(interval);\r\n//   }, [cards]);\r\n\r\n//   const handleKnowMore = (uuid) => {\r\n//     navigate(`/business/${uuid}`);\r\n//   };\r\n\r\n//   // Only render title and grid if there are cards\r\n//   if (cards.length === 0) return null;\r\n\r\n//   return (\r\n//     <div className=\"syb-wrapper\">\r\n//       <div className=\"syb-heading-row\">\r\n//         <h2 className=\"syb-heading\">Exploring Business Opportunities</h2>\r\n//         <a href=\"/BusinessList\" className=\"syb-view-all\">View All</a>\r\n//       </div>\r\n\r\n//       <div className=\"syb-grid\">\r\n//         {visibleCards.map((card, index) => (\r\n//           <div className=\"syb-card\" key={index}>\r\n//             <div className=\"syb-img-wrap\">\r\n//               <img\r\n//                 src={getImageUrl(`${card.image}`)}\r\n//                 alt={card.full_name}\r\n//               />\r\n//             </div>\r\n//             <div className=\"syb-content\">\r\n//               <div className=\"syb-detail\">\r\n//                 <div className=\"biz-field\">\r\n//                   <span className=\"label\">Expected Amount:</span>\r\n//                   <span className=\"value\">₹{parseFloat(card.expected_amount || 0).toLocaleString()}</span>\r\n//                 </div>\r\n//                 <div className=\"biz-field\">\r\n//                   <span className=\"label\">Location:</span>\r\n//                   <span className=\"value\">{card.city_name}, {card.state_name}</span>\r\n//                 </div>\r\n//                 <div className=\"biz-field\">\r\n//                   <span className=\"label\">Description:</span>\r\n//                   <span className=\"value\">{card.description || 'N/A'}</span>\r\n//                 </div>\r\n//               </div>\r\n\r\n//               <button className=\"syb-btn\" onClick={() => handleKnowMore(card.uuid)}>\r\n//                 Know More\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SellBusinessCards;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './design/SellYourBusinessCards.css';\r\nimport { getApiUrl , getImageUrl } from '../utils/api';\r\n\r\nconst SellBusinessCards = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [visibleCards, setVisibleCards] = useState([]);\r\n  const currentIndex = useRef(0);\r\n  const navigate = useNavigate();\r\n\r\n  // For hold\r\n  const holdTimeout = useRef(null);\r\n  const holdDuration = 1000; // 1 seconds\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl(\"get-sell-business.php\"))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.success && Array.isArray(data.cards) && data.cards.length > 0) {\r\n          const unique = [];\r\n          const seen = new Set();\r\n          for (const card of data.cards) {\r\n            const key = card.full_name + card.email;\r\n            if (!seen.has(key)) {\r\n              seen.add(key);\r\n              unique.push(card);\r\n            }\r\n          }\r\n          setCards(unique);\r\n          setVisibleCards(unique.slice(0, 3));\r\n          currentIndex.current = 3;\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cards.length === 0) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setVisibleCards((prev) => {\r\n        if (cards.length === 0) return [];\r\n\r\n        if (currentIndex.current >= cards.length) {\r\n          currentIndex.current = 0;\r\n        }\r\n\r\n        const next = [...prev.slice(1), cards[currentIndex.current]];\r\n        currentIndex.current += 1;\r\n        return next;\r\n      });\r\n    }, 3000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [cards]);\r\n\r\n  const handleKnowMore = (uuid) => {\r\n    navigate(`/business/${uuid}`);\r\n  };\r\n\r\n  // Hold start\r\n  const handleHoldStart = (uuid) => {\r\n    holdTimeout.current = setTimeout(() => {\r\n      handleKnowMore(uuid);\r\n    }, holdDuration);\r\n  };\r\n\r\n  // Hold end\r\n  const handleHoldEnd = () => {\r\n    if (holdTimeout.current) {\r\n      clearTimeout(holdTimeout.current);\r\n      holdTimeout.current = null;\r\n    }\r\n  };\r\n\r\n  // Only render title and grid if there are cards\r\n  if (cards.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"syb-wrapper\">\r\n      <div className=\"syb-heading-row\">\r\n        <h2 className=\"syb-heading\">Exploring Business Opportunities</h2>\r\n        <a href=\"/BusinessList\" className=\"syb-view-all\">View All</a>\r\n      </div>\r\n\r\n      <div className=\"syb-grid\">\r\n        {visibleCards.map((card, index) => (\r\n          <div\r\n            className=\"syb-card\"\r\n            key={index}\r\n            // Long-press handlers\r\n            onMouseDown={() => handleHoldStart(card.uuid)}\r\n            onMouseUp={handleHoldEnd}\r\n            onMouseLeave={handleHoldEnd}\r\n            onTouchStart={() => handleHoldStart(card.uuid)}\r\n            onTouchEnd={handleHoldEnd}\r\n          >\r\n            <div className=\"syb-img-wrap\">\r\n              <img\r\n                src={getImageUrl(`${card.image}`)}\r\n                alt={card.full_name}\r\n              />\r\n            </div>\r\n            <div className=\"syb-content\">\r\n              <div className=\"syb-detail\">\r\n                <div className=\"biz-field\">\r\n                  <span className=\"label\">Expected Amount:</span>\r\n                  <span className=\"value\">₹{parseFloat(card.expected_amount || 0).toLocaleString()}</span>\r\n                </div>\r\n                <div className=\"biz-field\">\r\n                  <span className=\"label\">Location:</span>\r\n                  <span className=\"value\">{card.city_name}, {card.state_name}</span>\r\n                </div>\r\n                <div className=\"biz-field\">\r\n                  <span className=\"label\">Description:</span>\r\n                  <span className=\"value\">{card.description || 'N/A'}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Normal click button */}\r\n              <button className=\"syb-btn\" onClick={() => handleKnowMore(card.uuid)}>\r\n                Know More (Hold)\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellBusinessCards;\r\n","// import React, { useEffect, useState, useRef } from 'react';\r\n// import './design/LeasePropertiesDisplay.css';\r\n// import { getImageUrl , getApiUrl } from '../utils/api';\r\n\r\n// const LeasePropertiesDisplay = () => {\r\n//   const [properties, setProperties] = useState([]);\r\n//   const [visibleCards, setVisibleCards] = useState([]);\r\n//   const currentIndexRef = useRef(0);\r\n//   const intervalRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     fetch(getApiUrl('get-lease-properties.php'))\r\n//       .then(res => res.json())\r\n//       .then(data => {\r\n//         if (data.status === 'success' && Array.isArray(data.data) && data.data.length > 0) {\r\n//           const uniqueProps = data.data.filter(\r\n//             (prop, index, self) =>\r\n//               prop &&\r\n//               prop.image_path &&\r\n//               index === self.findIndex(p => p.image_path === prop.image_path)\r\n//           );\r\n//           const shuffled = uniqueProps.sort(() => Math.random() - 0.5);\r\n//           setProperties(shuffled);\r\n\r\n//           // Set initial 3 cards\r\n//           setVisibleCards(shuffled.slice(0, 3));\r\n//           currentIndexRef.current = 3;\r\n//         }\r\n//       })\r\n//       .catch(err => console.error(\"Failed to load lease properties\", err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (properties.length > 3) {\r\n//       intervalRef.current = setInterval(() => {\r\n//         setVisibleCards(prev => {\r\n//           const nextIndex = currentIndexRef.current % properties.length;\r\n//           const nextCard = properties[nextIndex];\r\n//           currentIndexRef.current += 1;\r\n\r\n//           const updated = [...prev.slice(1), nextCard];\r\n//           return updated;\r\n//         });\r\n//       }, 4000);\r\n//     }\r\n\r\n//     return () => clearInterval(intervalRef.current);\r\n//   }, [properties]);\r\n\r\n//   // If no properties, render nothing\r\n//   if (properties.length === 0) return null;\r\n\r\n//   return (\r\n//     <div className=\"lease-wrapper\">\r\n//       <div className=\"lease-header\">\r\n//         <h2 className=\"lease-heading\">Exploring Properties</h2>\r\n//         <a href=\"/all-lease-properties\" className=\"view-all-link\">View All</a>\r\n//       </div>\r\n\r\n//       <div className=\"lease-card-grid\">\r\n//         {visibleCards.map((prop, i) => (\r\n//           <div className=\"lease-card\" key={i}>\r\n//             <div className=\"lease-img-wrap\">\r\n//               <img\r\n//                 src={getImageUrl(prop.image_path)}\r\n//                 alt=\"Property\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"lease-info\">\r\n//               <h3 className=\"biz-title\">{prop.property_type}</h3>\r\n//               <div className=\"lease-meta\">\r\n//                 <p><span className=\"label\">Expected Rent:</span> <span>₹{prop.expected_rent}</span></p>\r\n//                 <p><span className=\"label\">Area:</span> <span>{prop.sqft}</span></p>\r\n//                 <p><span className=\"label\">Floor:</span> <span>{prop.floor_type}</span></p>\r\n//                 <p><span className=\"label\">City:</span> <span>{prop.city_name}</span></p>\r\n//               </div>\r\n//               <button className=\"lease-btn\">Know More</button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LeasePropertiesDisplay;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState, useRef } from 'react';\r\n// import './design/LeasePropertiesDisplay.css';\r\n// import { getImageUrl , getApiUrl } from '../utils/api';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// // ✅ Utility: Convert number into Indian \"lacs/crores\" format\r\n// function formatIndianCurrency(number) {\r\n//   if (!number || isNaN(number)) return \"—\";\r\n\r\n//   if (number >= 10000000) {\r\n//     // 1 crore = 1,00,00,000\r\n//     const crores = number / 10000000;\r\n//     return `${parseFloat(crores.toFixed(1)).toString().replace(/\\.0$/, '')} cr`;\r\n//   } else {\r\n//     const lacs = number / 100000;\r\n//     return `${parseFloat(lacs.toFixed(0))} lacs`;\r\n//   }\r\n// }\r\n\r\n// const LeasePropertiesDisplay = () => {\r\n//   const [properties, setProperties] = useState([]);\r\n//   const [visibleCards, setVisibleCards] = useState([]);\r\n//   const currentIndexRef = useRef(0);\r\n//   const intervalRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     fetch(getApiUrl('get-lease-properties.php'))\r\n//       .then(res => res.json())\r\n//       .then(data => {\r\n//         if (data.status === 'success' && Array.isArray(data.data) && data.data.length > 0) {\r\n//           const uniqueProps = data.data.filter(\r\n//             (prop, index, self) =>\r\n//               prop &&\r\n//               prop.image_path &&\r\n//               index === self.findIndex(p => p.image_path === prop.image_path)\r\n//           );\r\n//           const shuffled = uniqueProps.sort(() => Math.random() - 0.5);\r\n//           setProperties(shuffled);\r\n\r\n//           // Set initial 3 cards\r\n//           setVisibleCards(shuffled.slice(0, 3));\r\n//           currentIndexRef.current = 3;\r\n//         }\r\n//       })\r\n//       .catch(err => console.error(\"Failed to load lease properties\", err));\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (properties.length > 3) {\r\n//       intervalRef.current = setInterval(() => {\r\n//         setVisibleCards(prev => {\r\n//           const nextIndex = currentIndexRef.current % properties.length;\r\n//           const nextCard = properties[nextIndex];\r\n//           currentIndexRef.current += 1;\r\n\r\n//           const updated = [...prev.slice(1), nextCard];\r\n//           return updated;\r\n//         });\r\n//       }, 4000);\r\n//     }\r\n\r\n//     return () => clearInterval(intervalRef.current);\r\n//   }, [properties]);\r\n\r\n//   if (properties.length === 0) return null;\r\n\r\n//   return (\r\n//     <div className=\"lease-wrapper\">\r\n//       <div className=\"lease-header\">\r\n//         <h2 className=\"lease-heading\">Exploring Properties</h2>\r\n//         <a href=\"/all-lease-properties\" className=\"view-all-link\">View All</a>\r\n//       </div>\r\n\r\n//       <div className=\"lease-card-grid\">\r\n//         {visibleCards.map((prop, i) => (\r\n//           <div className=\"lease-card\" key={i}>\r\n//             <div className=\"lease-img-wrap\">\r\n//               <img\r\n//                 src={getImageUrl(prop.image_path)}\r\n//                 alt=\"Property\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"lease-info\">\r\n//               <h3 className=\"biz-title\">{prop.property_type}</h3>\r\n//               <div className=\"lease-meta\">\r\n//                 <p>\r\n//                   <span className=\"label\">Expected Rent:</span>{\" \"}\r\n//                   <span>₹{formatIndianCurrency(prop.expected_rent)}</span>\r\n//                 </p>\r\n//                 <p><span className=\"label\">Area:</span> <span>{prop.sqft}</span></p>\r\n//                 <p><span className=\"label\">Floor:</span> <span>{prop.floor_type}</span></p>\r\n//                 <p><span className=\"label\">City:</span> <span>{prop.city_name}</span></p>\r\n//               </div>\r\n\r\n//               <Link to={`/property/${prop.property_key}`}>\r\n//                 <button className=\"lease-btn\">Know More</button>\r\n//               </Link>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LeasePropertiesDisplay;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport './design/LeasePropertiesDisplay.css';\r\nimport { getImageUrl, getApiUrl } from '../utils/api';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n// ✅ Utility: Convert number into Indian \"lacs/crores\" format\r\nfunction formatIndianCurrency(number) {\r\n  if (!number || isNaN(number)) return \"—\";\r\n\r\n  if (number >= 10000000) {\r\n    // 1 crore = 1,00,00,000\r\n    const crores = number / 10000000;\r\n    return `${parseFloat(crores.toFixed(1)).toString().replace(/\\.0$/, '')} cr`;\r\n  } else {\r\n    const lacs = number / 100000;\r\n    return `${parseFloat(lacs.toFixed(0))} lacs`;\r\n  }\r\n}\r\n\r\nconst LeasePropertiesDisplay = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [visibleCards, setVisibleCards] = useState([]);\r\n  const currentIndexRef = useRef(0);\r\n  const intervalRef = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Hold refs\r\n  const holdTimeout = useRef(null);\r\n  const holdDuration = 1000; // 1s\r\n\r\n  useEffect(() => {\r\n    fetch(getApiUrl('get-lease-properties.php'))\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.status === 'success' && Array.isArray(data.data) && data.data.length > 0) {\r\n          const uniqueProps = data.data.filter(\r\n            (prop, index, self) =>\r\n              prop &&\r\n              prop.image_path &&\r\n              index === self.findIndex(p => p.image_path === prop.image_path)\r\n          );\r\n          const shuffled = uniqueProps.sort(() => Math.random() - 0.5);\r\n          setProperties(shuffled);\r\n\r\n          // Set initial 3 cards\r\n          setVisibleCards(shuffled.slice(0, 3));\r\n          currentIndexRef.current = 3;\r\n        }\r\n      })\r\n      .catch(err => console.error(\"Failed to load lease properties\", err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (properties.length > 3) {\r\n      intervalRef.current = setInterval(() => {\r\n        setVisibleCards(prev => {\r\n          const nextIndex = currentIndexRef.current % properties.length;\r\n          const nextCard = properties[nextIndex];\r\n          currentIndexRef.current += 1;\r\n\r\n          const updated = [...prev.slice(1), nextCard];\r\n          return updated;\r\n        });\r\n      }, 4000);\r\n    }\r\n\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [properties]);\r\n\r\n  // ✅ Long press handlers\r\n  const handleHoldStart = (propertyKey) => {\r\n    holdTimeout.current = setTimeout(() => {\r\n      navigate(`/property/${propertyKey}`);\r\n    }, holdDuration);\r\n  };\r\n\r\n  const handleHoldEnd = () => {\r\n    if (holdTimeout.current) {\r\n      clearTimeout(holdTimeout.current);\r\n      holdTimeout.current = null;\r\n    }\r\n  };\r\n\r\n  if (properties.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"lease-wrapper\">\r\n      <div className=\"lease-header\">\r\n        <h2 className=\"lease-heading\">Exploring Properties</h2>\r\n        <a href=\"/all-lease-properties\" className=\"view-all-link\">View All</a>\r\n      </div>\r\n\r\n      <div className=\"lease-card-grid\">\r\n        {visibleCards.map((prop, i) => (\r\n          <div\r\n            className=\"lease-card\"\r\n            key={i}\r\n            // ✅ Hold events\r\n            onMouseDown={() => handleHoldStart(prop.property_key)}\r\n            onMouseUp={handleHoldEnd}\r\n            onMouseLeave={handleHoldEnd}\r\n            onTouchStart={() => handleHoldStart(prop.property_key)}\r\n            onTouchEnd={handleHoldEnd}\r\n          >\r\n            <div className=\"lease-img-wrap\">\r\n              <img\r\n                src={getImageUrl(prop.image_path)}\r\n                alt=\"Property\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"lease-info\">\r\n              <h3 className=\"biz-title\">{prop.property_type}</h3>\r\n              <div className=\"lease-meta\">\r\n                <p>\r\n                  <span className=\"label\">Expected Rent:</span>{\" \"}\r\n                  <span>₹{formatIndianCurrency(prop.expected_rent)}</span>\r\n                </p>\r\n                <p><span className=\"label\">Area:</span> <span>{prop.sqft}</span></p>\r\n                <p><span className=\"label\">Floor:</span> <span>{prop.floor_type}</span></p>\r\n                <p><span className=\"label\">City:</span> <span>{prop.city_name}</span></p>\r\n              </div>\r\n\r\n              <Link to={`/property/${prop.property_key}`}>\r\n                <button className=\"lease-btn\">Know More (Hold)</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeasePropertiesDisplay;\r\n","import React from 'react';\r\nimport './HomePage.css';\r\nimport TopBrands from '../components/TopBrands';\r\nimport BannerCarousel from '../components/BannerCarousel';\r\nimport NewsSection from '../components/NewsSection';\r\nimport YoutubeSection from '../components/YoutubeSection';\r\nimport SellYourBusinessCards from '../components/SellYourBusinessCards';\r\nimport LeasePropertiesDisplay from '../components/LeasePropertiesDisplay';\r\nimport { getApiUrl } from '../utils/api'; // ✅ import the utility\r\nimport FranchiseListing from '../components/FranchiseListing';\r\nimport Testimonial from '../components/Testimonial';\r\n\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <BannerCarousel />\r\n      \r\n      {/* Top Franchising Opportunities - View All Link points to category 1 */}\r\n      <TopBrands\r\n        apiUrl={getApiUrl('get-premium-brands.php')}\r\n        sectionTitle=\"Top Franchising Opportunities\"\r\n        viewAllLink=\"/franchises/category/1\"\r\n      />\r\n      \r\n      {/* Trending Franchising Opportunities - View All Link points to category 2 */}\r\n      <TopBrands\r\n        apiUrl={getApiUrl('get-top-brands.php')}\r\n        sectionTitle=\"Trending Franchising Opportunities\"\r\n        viewAllLink=\"/franchises/category/3\"\r\n      />\r\n      \r\n      {/* Popular Franchising Opportunities - View All Link points to category 3 */}\r\n      <TopBrands\r\n        apiUrl={getApiUrl('get-featured-brands.php')}\r\n        sectionTitle=\"Popular Franchising Opportunities\"\r\n        viewAllLink=\"/franchises/category/2\"\r\n      />\r\n      {/* <Testimonial/> */}\r\n      <SellYourBusinessCards />\r\n      <LeasePropertiesDisplay />\r\n      <NewsSection />\r\n      \r\n      {/* <YoutubeSection /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","// File: src/components/FranchiseListing.jsx\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './design/FranchiseListing.css';\r\nimport InquiryForm from './EnquiryForm';\r\nimport './design/ListingInquiry.css';\r\nimport { getImageUrl, getApiUrl } from '../utils/api';\r\n\r\n// Utility: Convert number into Indian \"lacs/crores\" format\r\nfunction formatIndianCurrency(number) {\r\n  if (!number || isNaN(number)) return \"—\";\r\n\r\n  if (number >= 10000000) {\r\n    const crores = number / 10000000;\r\n    return `${parseFloat(crores.toFixed(1)).toString().replace(/\\.0$/, '')} cr`;\r\n  } else {\r\n    const lacs = number / 100000;\r\n    return `${parseFloat(lacs.toFixed(0))} lacs`;\r\n  }\r\n}\r\n\r\nconst FranchiseListing = () => {\r\n  const { categoryId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [brands, setBrands] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const apiUrl = getApiUrl(`get-brands-by-category.php?category_id=${categoryId}`);\r\n\r\n  useEffect(() => {\r\n    const fetchBrands = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(apiUrl);\r\n        if (!res.ok) throw new Error('Network response was not ok');\r\n\r\n        const data = await res.json();\r\n        if (data.success && Array.isArray(data.brands)) {\r\n          setBrands(data.brands);\r\n          setError(null);\r\n        } else {\r\n          setBrands([]);\r\n          setError(data.message || 'No brands found for this category.');\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching brands:\", err);\r\n        setError(\"Failed to fetch brands. Please try again.\");\r\n        setBrands([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (categoryId) fetchBrands();\r\n  }, [categoryId, apiUrl]);\r\n\r\n  const handleKnowMore = (register_id) => {\r\n    navigate(`/brand/${register_id}`);\r\n  };\r\n\r\n  // Long-press logic\r\n  const holdTimeout = useRef(null);\r\n  const holdDuration = 1000; // ms to trigger hold (1s)\r\n\r\n  const handleHoldStart = (register_id) => {\r\n    holdTimeout.current = setTimeout(() => {\r\n      handleKnowMore(register_id);\r\n    }, holdDuration);\r\n  };\r\n\r\n  const handleHoldEnd = () => {\r\n    if (holdTimeout.current) {\r\n      clearTimeout(holdTimeout.current);\r\n      holdTimeout.current = null;\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading-message\">Loading brands...</div>;\r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n  if (brands.length === 0) return <div className=\"no-brands-message\">No franchises found in this category.</div>;\r\n\r\n  return (\r\n    <div className=\"franchise-listing-container\">\r\n      <div className=\"franchise-listing-main\">\r\n        <div className=\"franchise-listing-header\">\r\n          <h2 className=\"syb-heading\">All Franchises in Category</h2>\r\n        </div>\r\n\r\n        <div className=\"franchise-grid\">\r\n          {brands.map((brand, i) => (\r\n            <div\r\n              className=\"franchise-card\"\r\n              key={brand.id || i}\r\n              // Long press handlers\r\n              onMouseDown={() => handleHoldStart(brand.register_id)}\r\n              onMouseUp={handleHoldEnd}\r\n              onMouseLeave={handleHoldEnd}\r\n              onTouchStart={() => handleHoldStart(brand.register_id)}\r\n              onTouchEnd={handleHoldEnd}\r\n            >\r\n              <div className=\"franchise-img-wrap\">\r\n                <img\r\n                  src={getImageUrl(brand.logo) || 'https://via.placeholder.com/200'}\r\n                  alt={brand.name || 'Brand'}\r\n                />\r\n              </div>\r\n              <div className=\"franchise-content\">\r\n                <h3>{brand.name || 'Unknown Brand'}</h3>\r\n                <div className=\"franchise-detail\">\r\n                  <div className=\"biz-field\">\r\n                    <span className=\"label\">Sector:</span>\r\n                    <span className=\"value\">{brand.sector || '—'}</span>\r\n                  </div>\r\n                  <div className=\"biz-field\">\r\n                    <span className=\"label\">Investment:</span>\r\n                    <span className=\"value\">\r\n                      ₹{formatIndianCurrency(brand.min_investment)} - {formatIndianCurrency(brand.max_investment)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"biz-field\">\r\n                    <span className=\"label\">Area:</span>\r\n                    <span className=\"value\">{brand.min_area || 0} - {brand.max_area || 0} sq.ft</span>\r\n                  </div>\r\n                  <div className=\"biz-field\">\r\n                    <span className=\"label\">Outlets:</span>\r\n                    <span className=\"value\">{brand.total_outlets || 0}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Click button for normal navigation */}\r\n                <button\r\n                  className=\"franchise-btn\"\r\n                  onClick={() => handleKnowMore(brand.register_id)}\r\n                >\r\n                  Know More (Hold)\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"franchise-listing-sidebar\">\r\n        <InquiryForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FranchiseListing;\r\n"],"names":["_ref","apiUrl","getApiUrl","sectionTitle","viewAllLink","brands","setBrands","useState","loading","setLoading","cardGridRef","useRef","intervalRef","navigate","useNavigate","formatIndianCurrency","number","isNaN","concat","toFixed","Math","round","toLocaleString","useEffect","async","res","fetch","data","json","success","Array","isArray","unique","filter","b","i","arr","findIndex","x","id","err","console","error","fetchBrands","clearInterval","current","handleKnowMore","length","grid","cards","querySelectorAll","cardWidth","offsetWidth","totalCards","scrollLeft","handleScroll","addEventListener","setInterval","scrollBy","left","behavior","removeEventListener","_jsxs","className","children","_jsx","href","ref","renderBrands","first","map","brand","renderCard","onClick","style","cursor","src","getImageUrl","logo","alt","name","sector","min_investment","max_investment","min_area","max_area","total_outlets","e","stopPropagation","BannerCarousel","banners","setBanners","currentIndex","setCurrentIndex","axios","get","then","response","log","catch","interval","prevIndex","banner","index","target","rel","image_url","title","news","onClose","sanitizedDescription","DOMPurify","sanitize","description","FaTimes","image","Date","created_at","toLocaleDateString","dangerouslySetInnerHTML","__html","NewsSection","setNews","visibleIndex","setVisibleIndex","selectedNews","setSelectedNews","fetchNews","prev","_Fragment","item","dateStr","month","day","year","NewsModal","SellBusinessCards","setCards","visibleCards","setVisibleCards","holdTimeout","seen","Set","card","key","full_name","email","has","add","push","slice","next","uuid","handleHoldStart","setTimeout","handleHoldEnd","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","parseFloat","expected_amount","city_name","state_name","toString","replace","LeasePropertiesDisplay","properties","setProperties","currentIndexRef","status","shuffled","prop","self","image_path","p","sort","random","nextIndex","nextCard","propertyKey","property_key","property_type","expected_rent","sqft","floor_type","Link","to","TopBrands","SellYourBusinessCards","FranchiseListing","categoryId","useParams","setError","ok","Error","message","register_id","InquiryForm"],"sourceRoot":""}