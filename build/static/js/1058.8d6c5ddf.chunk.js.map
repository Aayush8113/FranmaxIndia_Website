{"version":3,"file":"static/js/1058.8d6c5ddf.chunk.js","mappings":"+PAae,SAASA,IACpB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,OACtCG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IAGxCO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,OAC5CS,EAAiBC,IAAsBV,EAAAA,EAAAA,UAAS,CAAEW,MAAO,GAAIC,YAAa,MAG1EC,EAAgBC,IAAqBd,EAAAA,EAAAA,UAAS,OAE9Ce,EAASC,IAAchB,EAAAA,EAAAA,UAAS,CACnCW,MAAO,GACPM,MAAO,KACPL,YAAa,KAQXM,EAAaA,KACfZ,GAAe,GACfU,EAAW,CACPL,MAAO,GACPM,MAAO,KACPL,YAAa,MAIfO,EAAqBC,IACvB,MAAM,KAAEC,EAAI,MAAEC,EAAK,MAAEC,GAAUH,EAAEI,OACjCR,EAAYS,IAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAQ,IACX,CAACJ,GAAOE,EAAQA,EAAM,GAAKD,MAiB7BK,EAAmBA,KACrBnB,EAAiB,MACjBE,EAAmB,CAAEC,MAAO,GAAIC,YAAa,MAG3CgB,EAAoBR,IACtB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEI,OAC1Bd,EAAmBmB,IAAQH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUG,GAAQ,IAAE,CAACR,GAAOC,MAGrDQ,EAA+BC,IACjCrB,EAAmBmB,IAAQH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUG,GAAQ,IAAEjB,YAAamB,MAgB1DC,EAAqBA,KACvBlB,EAAkB,OAIhBmB,EAAaC,UACf9B,GAAW,GACX,IACI,MAAM+B,QAAYC,OAAMC,EAAAA,EAAAA,GAAU,gBAAiB,CAC/CC,OAAQ,OACRC,KAAMC,IAGV,IAAKL,EAAIM,GACL,MAAM,IAAIC,MAAM,gCAGpB,MAAMC,QAAeR,EAAIS,OACrBD,EAAOE,SACPC,EAAAA,GAAMD,QAAQF,EAAOI,SACrBC,IACA9B,IACAV,EAAiB,OAEjBsC,EAAAA,GAAMG,MAAMN,EAAOI,SAAW,gCAEtC,CAAE,MAAOG,GACLJ,EAAAA,GAAMG,MAAM,yCAChB,CAAC,QACG7C,GAAW,EACf,GAaE+C,EAAoB/B,IACtBA,EAAEgC,iBACF,MAAMZ,EAAW,IAAIa,SACrBb,EAASc,OAAO,SAAU,QAC1Bd,EAASc,OAAO,KAAM/C,GACtBiC,EAASc,OAAO,QAAS7C,EAAgBE,OACzC6B,EAASc,OAAO,cAAe7C,EAAgBG,aAC/CqB,EAAWO,IAGTQ,EAAmBd,UACrB9B,GAAW,GACX,IACI,MAAM+B,QAAYC,OAAMC,EAAAA,EAAAA,GAAU,iBAClC,IAAKF,EAAIM,GACL,MAAM,IAAIC,MAAM,+BAEpB,MAAMa,QAAapB,EAAIS,OAEnBW,EAAKV,QACL9C,EAAewD,EAAKC,MAEpBzD,EAAe,GAEvB,CAAE,MAAOmD,GACLJ,EAAAA,GAAMG,MAAM,+BAChB,CAAC,QACG7C,GAAW,EACf,GAOJ,OAJAqD,EAAAA,EAAAA,WAAU,KACNT,KACD,KAGCU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,KACRJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAACE,EAAAA,GAAc,KACfL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAAC,iBAC5BF,EAAAA,EAAAA,MAAA,UAAQM,QA/INC,IAAM3D,GAAe,GA+IKqD,UAAU,eAAcC,SAAA,EAChDC,EAAAA,EAAAA,KAACK,EAAAA,IAAM,CAACP,UAAU,SAAS,kBAIlCxD,IAAW0D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAC,gBAEnCzD,GAAkC,IAAvBL,EAAYqE,SACrBN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAAC,2BAGnCzD,GAAWL,EAAYqE,OAAS,IAC9BN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC1BF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,QACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAGZC,EAAAA,EAAAA,KAAA,SAAAD,SACK9D,EAAYsE,IAAKZ,IACdE,EAAAA,EAAAA,MAACW,EAAAA,SAAc,CAAAT,SAAA,CACVrD,IAAkBiD,EAAKc,IAEpBZ,EAAAA,EAAAA,MAAA,MAAIC,UAAU,WAAUC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAKc,MACVT,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIU,KAAK,OACLlD,KAAK,QACLC,MAAOb,EAAgBE,MACvB6D,SAAU5C,OAGlBiC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAKiB,cACVf,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iBAAgBC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,UAAQM,QAASb,EAAkBQ,UAAU,WAAUC,SAAA,EACnDC,EAAAA,EAAAA,KAACa,EAAAA,IAAM,IAAG,YAEdhB,EAAAA,EAAAA,MAAA,UAAQM,QAASrC,EAAkBgC,UAAU,aAAYC,SAAA,EACrDC,EAAAA,EAAAA,KAACc,EAAAA,IAAO,IAAG,oBAMvBjB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAKc,MACVT,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAK7C,SACVkD,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAKiB,cACVf,EAAAA,EAAAA,MAAA,MAAIC,UAAU,iBAAgBC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,UAAQG,QAASA,KAAMY,OAzMjDN,EAyM8Dd,EAAKc,QAxMrFpE,EAAcD,IAAeqE,EAAK,KAAOA,GADvBA,OAyMwEX,UAAU,aAAYC,SAC/D3D,IAAeuD,EAAKc,GAAK,eAAiB,kBAE/CZ,EAAAA,EAAAA,MAAA,UAAQM,QAASA,IA9KxCR,KACrBhD,EAAiBgD,EAAKc,IACtB5D,EAAmB,CAAEC,MAAO6C,EAAK7C,MAAOC,YAAa4C,EAAK5C,eA4KSiE,CAAgBrB,GAAOG,UAAU,WAAUC,SAAA,EAC9DC,EAAAA,EAAAA,KAACiB,EAAAA,IAAM,IAAG,YAEdpB,EAAAA,EAAAA,MAAA,UAAQM,QAASA,KAAMe,OA7J5CT,EA6J8Dd,EAAKc,QA5J1FxD,EAAkBwD,GADKA,OA6JwEX,UAAU,aAAYC,SAAA,EACrEC,EAAAA,EAAAA,KAACmB,EAAAA,IAAO,IAAG,mBAK1BzE,IAAkBiD,EAAKc,KACpBT,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,UACvBC,EAAAA,EAAAA,KAAA,MAAIoB,QAAQ,IAAGrB,UACXC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,KAACqB,IAAU,CACPC,MAAM,OACN7D,MAAOb,EAAgBG,YACvB4D,SAAU1C,UAM7B7B,IAAeuD,EAAKc,KACjBT,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,UACvBC,EAAAA,EAAAA,KAAA,MAAIoB,QAAQ,IAAGrB,UACXF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,CACvBJ,EAAKvC,QACF4C,EAAAA,EAAAA,KAAA,OACIuB,KAAKC,EAAAA,EAAAA,GAAY,GAADC,OAAI9B,EAAKvC,QACzBsE,IAAK/B,EAAK7C,MACVgD,UAAU,sBAGlBE,EAAAA,EAAAA,KAAA,OACIF,UAAU,8BACV6B,wBAAyB,CAAEC,OAAQjC,EAAK5C,wBApE3C4C,EAAKc,eAmFjDjE,IACGwD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYK,QAAS9C,EAAW0C,SAAC,aAEvDF,EAAAA,EAAAA,MAAA,QAAMgC,SAtKJtE,IAClBA,EAAEgC,iBACF,MAAMZ,EAAW,IAAIa,SACrBb,EAASc,OAAO,SAAU,OAC1Bd,EAASc,OAAO,QAASvC,EAAQJ,OACjC6B,EAASc,OAAO,QAASvC,EAAQE,OACjCuB,EAASc,OAAO,cAAevC,EAAQH,aACvCqB,EAAWO,IA+JmCmB,UAAU,gBAAgBgC,QAAQ,sBAAqB/B,SAAA,EACjFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,QAAOhC,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACIU,KAAK,OACLD,GAAG,QACHjD,KAAK,QACLC,MAAOP,EAAQJ,MACf6D,SAAUrD,EACV0E,UAAQ,QAGhBnC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,QAAOhC,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SACIU,KAAK,OACLD,GAAG,QACHjD,KAAK,QACLyE,OAAO,UACPtB,SAAUrD,EACV0E,UAAQ,QAGhBnC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAACqB,IAAU,CACPC,MAAM,OACN7D,MAAOP,EAAQH,YACf4D,SA3QCzC,IAC7Bf,EAAYS,IAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbD,GAAQ,IACXb,YAAamB,YA2QG2B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASZ,UAAU,aAAYC,SAAC,cAC7CC,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASZ,UAAU,aAAaK,QAAS9C,EAAW0C,SAAC,sBAQrF/C,IACGgD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYK,QAAShC,EAAmB4B,SAAC,aAE/DC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sFAEPF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UAAQC,UAAU,aAAaK,QAnQ3B+B,KACxB,MAAMvD,EAAW,IAAIa,SACrBb,EAASc,OAAO,KAAMzC,GACtB2B,EAASc,OAAO,SAAU,UAC1BrB,EAAWO,GACX1B,EAAkB,OA8P8D8C,SAAA,EACxDC,EAAAA,EAAAA,KAACmB,EAAAA,IAAO,IAAG,cAEftB,EAAAA,EAAAA,MAAA,UAAQC,UAAU,aAAaK,QAAShC,EAAmB4B,SAAA,EACvDC,EAAAA,EAAAA,KAACc,EAAAA,IAAO,IAAG,uBAQ3C,C","sources":["admin/Newsletter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Newsletter.css';\r\nimport Sidebar from './Sidebar';\r\nimport { FaPlus, FaEdit, FaSave, FaTimes, FaTrash } from 'react-icons/fa';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getApiUrl ,getImageUrl } from '../utils/api';\r\n\r\n// Utility function to get API URL\r\n// const getApiUrl = (endpoint) => `http://localhost/react-api/${endpoint}`;\r\n\r\nexport default function NewsletterTable() {\r\n    const [newsletters, setNewsletters] = useState([]);\r\n    const [expandedId, setExpandedId] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    // State for editing functionality\r\n    const [editingNewsId, setEditingNewsId] = useState(null);\r\n    const [editingNewsData, setEditingNewsData] = useState({ title: '', description: '' });\r\n\r\n    // State for delete confirmation\r\n    const [deletingNewsId, setDeletingNewsId] = useState(null);\r\n\r\n    const [newNews, setNewNews] = useState({\r\n        title: '',\r\n        image: null,\r\n        description: '',\r\n    });\r\n\r\n    const toggleExpand = (id) => {\r\n        setExpandedId(expandedId === id ? null : id);\r\n    };\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setNewNews({\r\n            title: '',\r\n            image: null,\r\n            description: '',\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, files } = e.target;\r\n        setNewNews((prevNews) => ({\r\n            ...prevNews,\r\n            [name]: files ? files[0] : value,\r\n        }));\r\n    };\r\n\r\n    const handleDescriptionChange = (content) => {\r\n        setNewNews((prevNews) => ({\r\n            ...prevNews,\r\n            description: content,\r\n        }));\r\n    };\r\n\r\n    // New handlers for editing\r\n    const handleEditClick = (news) => {\r\n        setEditingNewsId(news.id);\r\n        setEditingNewsData({ title: news.title, description: news.description });\r\n    };\r\n\r\n    const handleEditCancel = () => {\r\n        setEditingNewsId(null);\r\n        setEditingNewsData({ title: '', description: '' });\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setEditingNewsData(prevData => ({ ...prevData, [name]: value }));\r\n    };\r\n\r\n    const handleEditDescriptionChange = (content) => {\r\n        setEditingNewsData(prevData => ({ ...prevData, description: content }));\r\n    };\r\n\r\n    // New handlers for deletion\r\n    const handleDeleteClick = (id) => {\r\n        setDeletingNewsId(id);\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        const formData = new FormData();\r\n        formData.append('id', deletingNewsId);\r\n        formData.append('action', 'delete');\r\n        manageNews(formData);\r\n        setDeletingNewsId(null); // Close the confirmation modal\r\n    };\r\n\r\n    const handleCancelDelete = () => {\r\n        setDeletingNewsId(null); // Close the confirmation modal\r\n    };\r\n\r\n    // Unified function to handle add, edit, and delete API calls\r\n    const manageNews = async (formData) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('add-news.php'), {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok.');\r\n            }\r\n\r\n            const result = await res.json();\r\n            if (result.success) {\r\n                toast.success(result.message);\r\n                fetchNewsletters(); // Refresh the list\r\n                closeModal();\r\n                setEditingNewsId(null); // Exit edit mode\r\n            } else {\r\n                toast.error(result.message || 'An unexpected error occurred.');\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to communicate with the server.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'add');\r\n        formData.append('title', newNews.title);\r\n        formData.append('image', newNews.image);\r\n        formData.append('description', newNews.description);\r\n        manageNews(formData);\r\n    };\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('action', 'edit');\r\n        formData.append('id', editingNewsId);\r\n        formData.append('title', editingNewsData.title);\r\n        formData.append('description', editingNewsData.description);\r\n        manageNews(formData);\r\n    };\r\n\r\n    const fetchNewsletters = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await fetch(getApiUrl('get-news.php'));\r\n            if (!res.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await res.json();\r\n\r\n            if (data.success) {\r\n                setNewsletters(data.news);\r\n            } else {\r\n                setNewsletters([]);\r\n            }\r\n        } catch (err) {\r\n            toast.error('Failed to fetch newsletters.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNewsletters();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"newsletter-page-container\">\r\n            <Sidebar />\r\n            <div className=\"main-content\">\r\n                <ToastContainer />\r\n                <div className=\"table-header\">\r\n                    <h2 className=\"table-title\">Newsletters</h2>\r\n                    <button onClick={openModal} className=\"add-news-btn\">\r\n                        <FaPlus className=\"icon\" /> Add News\r\n                    </button>\r\n                </div>\r\n\r\n                {loading && <div className=\"loading\">Loading...</div>}\r\n\r\n                {!loading && newsletters.length === 0 && (\r\n                    <div className=\"no-data-message\">No newsletters found.</div>\r\n                )}\r\n\r\n                {!loading && newsletters.length > 0 && (\r\n                    <div className=\"table-wrapper\">\r\n                        <table className=\"newsletter-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Created At</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {newsletters.map((news) => (\r\n                                    <React.Fragment key={news.id}>\r\n                                        {editingNewsId === news.id ? (\r\n                                            // Editable Row\r\n                                            <tr className=\"edit-row\">\r\n                                                <td>{news.id}</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"title\"\r\n                                                        value={editingNewsData.title}\r\n                                                        onChange={handleEditChange}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>{news.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={handleEditSubmit} className=\"save-btn\">\r\n                                                        <FaSave /> Save\r\n                                                    </button>\r\n                                                    <button onClick={handleEditCancel} className=\"cancel-btn\">\r\n                                                        <FaTimes /> Cancel\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ) : (\r\n                                            // Summary Row\r\n                                            <tr className=\"summary-row\">\r\n                                                <td>{news.id}</td>\r\n                                                <td>{news.title}</td>\r\n                                                <td>{news.created_at}</td>\r\n                                                <td className=\"action-buttons\">\r\n                                                    <button onClick={() => toggleExpand(news.id)} className=\"expand-btn\">\r\n                                                        {expandedId === news.id ? 'Hide Details' : 'View Details'}\r\n                                                    </button>\r\n                                                    <button onClick={() => handleEditClick(news)} className=\"edit-btn\">\r\n                                                        <FaEdit /> Edit\r\n                                                    </button>\r\n                                                    <button onClick={() => handleDeleteClick(news.id)} className=\"delete-btn\">\r\n                                                        <FaTrash /> Delete\r\n                                                    </button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {editingNewsId === news.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        <ReactQuill\r\n                                                            theme=\"snow\"\r\n                                                            value={editingNewsData.description}\r\n                                                            onChange={handleEditDescriptionChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                        {expandedId === news.id && (\r\n                                            <tr className=\"details-row\">\r\n                                                <td colSpan=\"4\">\r\n                                                    <div className=\"details-box\">\r\n                                                        {news.image && (\r\n                                                            <img\r\n                                                                src={getImageUrl(`${news.image}`)}\r\n                                                                alt={news.title}\r\n                                                                className=\"newsletter-image\"\r\n                                                            />\r\n                                                        )}\r\n                                                        <div\r\n                                                            className=\"newsletter-description-html\"\r\n                                                            dangerouslySetInnerHTML={{ __html: news.description }}\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal for adding a new newsletter */}\r\n            {isModalOpen && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Add New Newsletter</h3>\r\n                            <button className=\"close-btn\" onClick={closeModal}>&times;</button>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit} className=\"add-news-form\" encType=\"multipart/form-data\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"title\"\r\n                                    name=\"title\"\r\n                                    value={newNews.title}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"image\">Image</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"image\"\r\n                                    name=\"image\"\r\n                                    accept=\"image/*\"\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description</label>\r\n                                <ReactQuill\r\n                                    theme=\"snow\"\r\n                                    value={newNews.description}\r\n                                    onChange={handleDescriptionChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-actions\">\r\n                                <button type=\"submit\" className=\"submit-btn\">Add News</button>\r\n                                <button type=\"button\" className=\"cancel-btn\" onClick={closeModal}>Cancel</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal for delete confirmation */}\r\n            {deletingNewsId && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h3>Confirm Deletion</h3>\r\n                            <button className=\"close-btn\" onClick={handleCancelDelete}>&times;</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>Are you sure you want to delete this newsletter? This action cannot be undone.</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"delete-btn\" onClick={handleConfirmDelete}>\r\n                                <FaTrash /> Delete\r\n                            </button>\r\n                            <button className=\"cancel-btn\" onClick={handleCancelDelete}>\r\n                                <FaTimes /> Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"names":["NewsletterTable","newsletters","setNewsletters","useState","expandedId","setExpandedId","loading","setLoading","isModalOpen","setIsModalOpen","editingNewsId","setEditingNewsId","editingNewsData","setEditingNewsData","title","description","deletingNewsId","setDeletingNewsId","newNews","setNewNews","image","closeModal","handleInputChange","e","name","value","files","target","prevNews","_objectSpread","handleEditCancel","handleEditChange","prevData","handleEditDescriptionChange","content","handleCancelDelete","manageNews","async","res","fetch","getApiUrl","method","body","formData","ok","Error","result","json","success","toast","message","fetchNewsletters","error","err","handleEditSubmit","preventDefault","FormData","append","data","news","useEffect","_jsxs","className","children","_jsx","Sidebar","ToastContainer","onClick","openModal","FaPlus","length","map","React","id","type","onChange","created_at","FaSave","FaTimes","toggleExpand","handleEditClick","FaEdit","handleDeleteClick","FaTrash","colSpan","ReactQuill","theme","src","getImageUrl","concat","alt","dangerouslySetInnerHTML","__html","onSubmit","encType","htmlFor","required","accept","handleConfirmDelete"],"sourceRoot":""}