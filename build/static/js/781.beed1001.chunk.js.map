{"version":3,"file":"static/js/781.beed1001.chunk.js","mappings":"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","sources":["admin/InhouseBrand.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./DynamicForm.css\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction DynamicForm() {\r\n  const [masterCategories, setMasterCategories] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n    const stageOptions = [\"Contacted\", \"Qualified\", \"Disqualified\", \"Working\",\"Prospecting\",\"Negotiation\",\"Closed Won\",\"Closed Lost\"];\r\n\r\n  const [formData, setFormData] = useState({\r\n    masterCategory: \"\",\r\n    category: \"\",\r\n    subCategory: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    brandName: \"\",\r\n    brandContact: \"\",\r\n    ownerName: \"\",\r\n    ownerContact: \"\",\r\n    contactPersonName: \"\",\r\n    contactPersonNumber: \"\",\r\n    callDate: \"\",\r\n    callTime: \"\",\r\n    callRemark: \"\",\r\n    meetingDate: \"\",\r\n    meetingTime: \"\",\r\n    meetingRemark: \"\",\r\n    product: \"\",\r\n    offerPrice: \"\",\r\n    counterPrice: \"\",\r\n    remark: \"\",\r\n  });\r\n\r\n  // Load master categories\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost/react-api/get-master-category.php\")\r\n      .then((res) => {\r\n        if (Array.isArray(res.data)) setMasterCategories(res.data);\r\n      })\r\n      .catch((err) => console.error(\"Error loading master categories:\", err));\r\n  }, []);\r\n\r\n  // Load categories when masterCategory changes\r\n  useEffect(() => {\r\n    if (formData.masterCategory) {\r\n      axios\r\n        .get(\r\n          `http://localhost/react-api/get-category.php/?mas_cat_id=${formData.masterCategory}`\r\n        )\r\n        .then((res) => {\r\n          if (Array.isArray(res.data)) setCategories(res.data);\r\n        })\r\n        .catch((err) => console.error(\"Error loading categories:\", err));\r\n    } else {\r\n      setCategories([]);\r\n    }\r\n    setFormData((prev) => ({ ...prev, category: \"\", subCategory: \"\" }));\r\n  }, [formData.masterCategory]);\r\n\r\n  // Load subcategories when category changes\r\n  useEffect(() => {\r\n    if (formData.category) {\r\n      axios\r\n        .get(\r\n          `http://localhost/react-api/get-sub-category.php?cat_id=${formData.category}`\r\n        )\r\n        .then((res) => {\r\n          if (Array.isArray(res.data)) setSubCategories(res.data);\r\n        })\r\n        .catch((err) => console.error(\"Error loading subcategories:\", err));\r\n    } else {\r\n      setSubCategories([]);\r\n    }\r\n    setFormData((prev) => ({ ...prev, subCategory: \"\" }));\r\n  }, [formData.category]);\r\n\r\n  // Load states from API\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost/react-api/get-indian-states.php\")\r\n      .then((res) => {\r\n        if (Array.isArray(res.data)) setStates(res.data);\r\n      })\r\n      .catch((err) => console.error(\"Error loading states:\", err));\r\n  }, []);\r\n\r\n  // Load cities when state changes\r\n  useEffect(() => {\r\n    if (formData.state) {\r\n      axios\r\n        .get(\r\n          `http://localhost/react-api/get-cities.php/?state_id=${formData.state}`\r\n        )\r\n        .then((res) => {\r\n          if (Array.isArray(res.data)) setCities(res.data);\r\n        })\r\n        .catch((err) => console.error(\"Error loading cities:\", err));\r\n    } else {\r\n      setCities([]);\r\n    }\r\n    setFormData((prev) => ({ ...prev, city: \"\" }));\r\n  }, [formData.state]);\r\n\r\n  // Load products (static for now)\r\n  useEffect(() => {\r\n    setProducts([\r\n      { id: 1, name: \"Sponsorship\" },\r\n      { id: 2, name: \"Co Sponsorship\" },\r\n      { id: 3, name: \"Title Sponsor\" },\r\n      { id: 4, name: \"Premium Stall\" },\r\n      { id: 5, name: \"General Stall\" },\r\n      { id: 6, name: \"Onboarding\" },\r\n      { id: 7, name: \"FDP\" },\r\n      { id: 8, name: \"MNR\" },\r\n      { id: 9, name: \"Recruitment\" },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Only allow numeric input for specified fields\r\n    if (name === \"ownerContact\" || name === \"contactPersonNumber\") {\r\n      const sanitizedValue = value.replace(/[^0-9]/g, \"\");\r\n      setFormData({ ...formData, [name]: sanitizedValue });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Log the form data to the console\r\n    console.log(\"Form Data Submitted:\", formData);\r\n\r\n    axios\r\n      .post(\"http://localhost/react-api/save-inhouse-brands.php\", formData)\r\n      .then((res) => {\r\n        alert(\"Form submitted successfully!\");\r\n        console.log(\"Server Response:\", res.data);\r\n        setFormData({\r\n          masterCategory: \"\",\r\n          category: \"\",\r\n          subCategory: \"\",\r\n          state: \"\",\r\n          city: \"\",\r\n          brandName: \"\",\r\n          brandContact: \"\",\r\n          ownerName: \"\",\r\n          ownerContact: \"\",\r\n          contactPersonName: \"\",\r\n          contactPersonNumber: \"\",\r\n          callDate: \"\",\r\n          callTime: \"\",\r\n          callRemark: \"\",\r\n          meetingDate: \"\",\r\n          meetingTime: \"\",\r\n          meetingRemark: \"\",\r\n          product: \"\",\r\n          offerPrice: \"\",\r\n          counterPrice: \"\",\r\n          remark: \"\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error submitting form:\", err);\r\n        alert(\"Failed to submit form, please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <div className=\"form-wrapper\">\r\n        <h2>Inhouse Brand</h2>\r\n        <form onSubmit={handleSubmit} className=\"form-grid\">\r\n          {/* Master Category */}\r\n          <label>Master Category</label>\r\n          {/* <select\r\n            name=\"masterCategory\"\r\n            value={formData.masterCategory}\r\n            onChange={handleChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select Master Category</option>\r\n            {masterCategories.map((mc) => (\r\n              <option key={mc.mas_cat_id} value={mc.mas_cat_id}>\r\n                {mc.mas_cat_name}\r\n              </option>\r\n            ))}\r\n          </select> */}\r\n           <input\r\n            type=\"text\"\r\n            name=\"masterCategory\"\r\n            value={formData.masterCategory}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* Category */}\r\n          <label>Category</label>\r\n           <input\r\n            type=\"text\"\r\n            name=\"category\"\r\n            value={formData.category}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* Sub Category */}\r\n          <label>Sub Category</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"subCategory\"\r\n            value={formData.subCategory}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* State */}\r\n          <label>State</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"state\"\r\n            value={formData.state}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* City */}\r\n          <label>City</label>\r\n           <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            value={formData.city}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          {/* Brand Details */}\r\n          <label>Brand Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"brandName\"\r\n            value={formData.brandName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <label>Brand Contact</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"brandContact\"\r\n            value={formData.brandContact}\r\n            onChange={handleChange}\r\n            required\r\n            pattern=\"[0-9]*\" // This provides a visual cue and helps on mobile\r\n            title=\"Please enter a valid number\"\r\n          />\r\n\r\n          <label>Owner Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ownerName\"\r\n            value={formData.ownerName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <label>Owner Contact</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ownerContact\"\r\n            value={formData.ownerContact}\r\n            onChange={handleChange}\r\n            required\r\n            pattern=\"[0-9]*\"\r\n            title=\"Please enter a valid number\"\r\n          />\r\n\r\n          <label>Contact Person Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactPersonName\"\r\n            value={formData.contactPersonName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n\r\n          <label>Contact Person Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"contactPersonNumber\"\r\n            value={formData.contactPersonNumber}\r\n            onChange={handleChange}\r\n            required\r\n            pattern=\"[0-9]*\"\r\n            title=\"Please enter a valid number\"\r\n          />\r\n\r\n          {/* Call Details */}\r\n          <label>Call Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"callDate\"\r\n            value={formData.callDate}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Call Time</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"callTime\"\r\n            value={formData.callTime}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Call Remark</label>\r\n          <textarea\r\n            name=\"callRemark\"\r\n            rows=\"2\"\r\n            value={formData.callRemark}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n\r\n          {/* Meeting Details */}\r\n          <label>Meeting Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"meetingDate\"\r\n            value={formData.meetingDate}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Meeting Time</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"meetingTime\"\r\n            value={formData.meetingTime}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Meeting Remark</label>\r\n          <textarea\r\n            name=\"meetingRemark\"\r\n            rows=\"2\"\r\n            value={formData.meetingRemark}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n\r\n          {/* Product */}\r\n          <label>Product</label>\r\n          <select\r\n            name=\"product\"\r\n            value={formData.product}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">Select Product</option>\r\n            {products.map((p) => (\r\n              <option key={p.id} value={p.name}>\r\n                {p.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <label>Offer Price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"offerPrice\"\r\n            value={formData.offerPrice}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Counter Price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"counterPrice\"\r\n            value={formData.counterPrice}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label>Final Remark</label>\r\n          <textarea\r\n            name=\"remark\"\r\n            rows=\"3\"\r\n            value={formData.remark}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n           <label>Stage</label>\r\n          <select name=\"stage\" value={formData.stage} onChange={handleChange} required>\r\n            <option value=\"\">Select Stage</option>\r\n            {stageOptions.map((s, i) => <option key={i} value={s}>{s}</option>)}\r\n          </select>\r\n\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DynamicForm;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./DynamicForm.css\";\r\n// import Sidebar from \"./Sidebar\";\r\n// import { getApiUrl } from \"../utils/api\";\r\n\r\n\r\n\r\n// function DynamicForm() {\r\n//   const [masterCategories, setMasterCategories] = useState([]);\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [subCategories, setSubCategories] = useState([]);\r\n//   const [states, setStates] = useState([]);\r\n//   const [cities, setCities] = useState([]);\r\n//   const [products, setProducts] = useState([]);\r\n//   const stageOptions = [\r\n//     \"Contacted\",\r\n//     \"Qualified\",\r\n//     \"Disqualified\",\r\n//     \"Working\",\r\n//     \"Prospecting\",\r\n//     \"Negotiation\",\r\n//     \"Closed Won\",\r\n//     \"Closed Lost\",\r\n//   ];\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     masterCategory: \"\",\r\n//     category: \"\",\r\n//     subCategory: \"\",\r\n//     state: \"\",\r\n//     city: \"\",\r\n//     brandName: \"\",\r\n//     brandContact: \"\",\r\n//     ownerName: \"\",\r\n//     ownerContact: \"\",\r\n//     contactPersonName: \"\",\r\n//     contactPersonNumber: \"\",\r\n//     callDate: \"\",\r\n//     callTime: \"\",\r\n//     callRemark: \"\",\r\n//     meetingDate: \"\",\r\n//     meetingTime: \"\",\r\n//     meetingRemark: \"\",\r\n//     product: \"\",\r\n//     offerPrice: \"\",\r\n//     counterPrice: \"\",\r\n//     remark: \"\",\r\n//     stage: \"\",\r\n//   });\r\n\r\n//   // Load master categories\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(getApiUrl(\"get-master-category.php\"))\r\n//       .then((res) => {\r\n//         if (Array.isArray(res.data)) setMasterCategories(res.data);\r\n//       })\r\n//       .catch((err) => console.error(\"Error loading master categories:\", err));\r\n//   }, []);\r\n\r\n//   // Load categories when masterCategory changes\r\n//   useEffect(() => {\r\n//     if (formData.masterCategory) {\r\n//       axios\r\n//         .get(getApiUrl(\r\n//           `get-category.php/?mas_cat_id=${formData.masterCategory}`\r\n//         ))\r\n//         .then((res) => {\r\n//           if (Array.isArray(res.data)) setCategories(res.data);\r\n//         })\r\n//         .catch((err) => console.error(\"Error loading categories:\", err));\r\n//     } else {\r\n//       setCategories([]);\r\n//     }\r\n//     setFormData((prev) => ({ ...prev, category: \"\", subCategory: \"\" }));\r\n//   }, [formData.masterCategory]);\r\n\r\n//   // Load subcategories when category changes\r\n//   useEffect(() => {\r\n//     if (formData.category) {\r\n//       axios\r\n//         .get(getApiUrl(\r\n//           `get-sub-category.php?cat_id=${formData.category}`\r\n//         ))\r\n//         .then((res) => {\r\n//           if (Array.isArray(res.data)) setSubCategories(res.data);\r\n//         })\r\n//         .catch((err) => console.error(\"Error loading subcategories:\", err));\r\n//     } else {\r\n//       setSubCategories([]);\r\n//     }\r\n//     setFormData((prev) => ({ ...prev, subCategory: \"\" }));\r\n//   }, [formData.category]);\r\n\r\n//   // Load states\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(getApiUrl(\"get-indian-states.php\"))\r\n//       .then((res) => {\r\n//         if (Array.isArray(res.data)) setStates(res.data);\r\n//       })\r\n//       .catch((err) => console.error(\"Error loading states:\", err));\r\n//   }, []);\r\n\r\n//   // Load cities when state changes\r\n//   useEffect(() => {\r\n//     if (formData.state) {\r\n//       axios\r\n//         .get(getApiUrl(`get-cities.php/?state_id=${formData.state}`))\r\n//         .then((res) => {\r\n//           if (Array.isArray(res.data)) setCities(res.data);\r\n//         })\r\n//         .catch((err) => console.error(\"Error loading cities:\", err));\r\n//     } else {\r\n//       setCities([]);\r\n//     }\r\n//     setFormData((prev) => ({ ...prev, city: \"\" }));\r\n//   }, [formData.state]);\r\n\r\n//   // Load products (static for now)\r\n//   useEffect(() => {\r\n//     setProducts([\r\n//       { id: 1, name: \"Sponsorship\" },\r\n//       { id: 2, name: \"Co Sponsorship\" },\r\n//       { id: 3, name: \"Title Sponsor\" },\r\n//       { id: 4, name: \"Premium Stall\" },\r\n//       { id: 5, name: \"General Stall\" },\r\n//       { id: 6, name: \"Onboarding\" },\r\n//       { id: 7, name: \"FDP\" },\r\n//       { id: 8, name: \"MNR\" },\r\n//       { id: 9, name: \"Recruitment\" },\r\n//     ]);\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     if (name === \"ownerContact\" || name === \"contactPersonNumber\") {\r\n//       const sanitizedValue = value.replace(/[^0-9]/g, \"\");\r\n//       setFormData({ ...formData, [name]: sanitizedValue });\r\n//     } else {\r\n//       setFormData({ ...formData, [name]: value });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Form Data Submitted:\", formData);\r\n\r\n//     axios\r\n//       .post(getApiUrl(\"save-inhouse-brands.php\", formData))\r\n//       .then((res) => {\r\n//         alert(\"Form submitted successfully!\");\r\n//         console.log(\"Server Response:\", res.data);\r\n//         setFormData({\r\n//           masterCategory: \"\",\r\n//           category: \"\",\r\n//           subCategory: \"\",\r\n//           state: \"\",\r\n//           city: \"\",\r\n//           brandName: \"\",\r\n//           brandContact: \"\",\r\n//           ownerName: \"\",\r\n//           ownerContact: \"\",\r\n//           contactPersonName: \"\",\r\n//           contactPersonNumber: \"\",\r\n//           callDate: \"\",\r\n//           callTime: \"\",\r\n//           callRemark: \"\",\r\n//           meetingDate: \"\",\r\n//           meetingTime: \"\",\r\n//           meetingRemark: \"\",\r\n//           product: \"\",\r\n//           offerPrice: \"\",\r\n//           counterPrice: \"\",\r\n//           remark: \"\",\r\n//           stage: \"\",\r\n//         });\r\n//       })\r\n//       .catch((err) => {\r\n//         console.error(\"Error submitting form:\", err);\r\n//         alert(\"Failed to submit form, please try again.\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Sidebar />\r\n//       {/* ✅ Removed snbs-content wrapper */}\r\n//       <div className=\"form-wrapper\">\r\n//         <h2>Inhouse Brand</h2>\r\n//         <form onSubmit={handleSubmit} className=\"form-grid\">\r\n//           {/* Master Category */}\r\n//           <label>Master Category</label>\r\n//           <select\r\n//             name=\"masterCategory\"\r\n//             value={formData.masterCategory}\r\n//             onChange={handleChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">Select Master Category</option>\r\n//             {masterCategories.map((mc) => (\r\n//               <option key={mc.mas_cat_id} value={mc.mas_cat_id}>\r\n//                 {mc.mas_cat_name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           {/* Category */}\r\n//           <label>Category</label>\r\n//           <select\r\n//             name=\"category\"\r\n//             value={formData.category}\r\n//             onChange={handleChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">Select Category</option>\r\n//             {categories.map((c) => (\r\n//               <option key={c.cat_id} value={c.cat_id}>\r\n//                 {c.cat_name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           {/* Sub Category */}\r\n//           <label>Sub Category</label>\r\n//           <select\r\n//             name=\"subCategory\"\r\n//             value={formData.subCategory}\r\n//             onChange={handleChange}\r\n//             required\r\n//           >\r\n//             <option value=\"\">Select Sub Category</option>\r\n//             {subCategories.map((sc) => (\r\n//               <option key={sc.subcat_id} value={sc.subcat_id}>\r\n//                 {sc.subcat_name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           {/* State */}\r\n//           <label>State</label>\r\n//           <select name=\"state\" value={formData.state} onChange={handleChange} required>\r\n//             <option value=\"\">Select State</option>\r\n//             {states.map((s) => (\r\n//               <option key={s.id} value={s.id}>\r\n//                 {s.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           {/* City */}\r\n//           <label>City</label>\r\n//           <select name=\"city\" value={formData.city} onChange={handleChange} required>\r\n//             <option value=\"\">Select City</option>\r\n//             {cities.map((c) => (\r\n//               <option key={c.id} value={c.id}>\r\n//                 {c.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           {/* Brand Details */}\r\n//           <label>Brand Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"brandName\"\r\n//             value={formData.brandName}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n\r\n//           <label>Brand Contact</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"brandContact\"\r\n//             value={formData.brandContact}\r\n//             onChange={handleChange}\r\n//             required\r\n//             pattern=\"[0-9]*\"\r\n//             title=\"Please enter a valid number\"\r\n//           />\r\n\r\n//           <label>Owner Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"ownerName\"\r\n//             value={formData.ownerName}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n\r\n//           <label>Owner Contact</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"ownerContact\"\r\n//             value={formData.ownerContact}\r\n//             onChange={handleChange}\r\n//             required\r\n//             pattern=\"[0-9]*\"\r\n//             title=\"Please enter a valid number\"\r\n//           />\r\n\r\n//           <label>Contact Person Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"contactPersonName\"\r\n//             value={formData.contactPersonName}\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n\r\n//           <label>Contact Person Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"contactPersonNumber\"\r\n//             value={formData.contactPersonNumber}\r\n//             onChange={handleChange}\r\n//             required\r\n//             pattern=\"[0-9]*\"\r\n//             title=\"Please enter a valid number\"\r\n//           />\r\n\r\n//           {/* Call Details */}\r\n//           <label>Call Date</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             name=\"callDate\"\r\n//             value={formData.callDate}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Call Time</label>\r\n//           <input\r\n//             type=\"time\"\r\n//             name=\"callTime\"\r\n//             value={formData.callTime}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Call Remark</label>\r\n//           <textarea\r\n//             name=\"callRemark\"\r\n//             rows=\"2\"\r\n//             value={formData.callRemark}\r\n//             onChange={handleChange}\r\n//           ></textarea>\r\n\r\n//           {/* Meeting Details */}\r\n//           <label>Meeting Date</label>\r\n//           <input\r\n//             type=\"date\"\r\n//             name=\"meetingDate\"\r\n//             value={formData.meetingDate}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Meeting Time</label>\r\n//           <input\r\n//             type=\"time\"\r\n//             name=\"meetingTime\"\r\n//             value={formData.meetingTime}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Meeting Remark</label>\r\n//           <textarea\r\n//             name=\"meetingRemark\"\r\n//             rows=\"2\"\r\n//             value={formData.meetingRemark}\r\n//             onChange={handleChange}\r\n//           ></textarea>\r\n\r\n//           {/* Product */}\r\n//           <label>Product</label>\r\n//           <select\r\n//             name=\"product\"\r\n//             value={formData.product}\r\n//             onChange={handleChange}\r\n//           >\r\n//             <option value=\"\">Select Product</option>\r\n//             {products.map((p) => (\r\n//               <option key={p.id} value={p.name}>\r\n//                 {p.name}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           <label>Offer Price</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"offerPrice\"\r\n//             value={formData.offerPrice}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Counter Price</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             name=\"counterPrice\"\r\n//             value={formData.counterPrice}\r\n//             onChange={handleChange}\r\n//           />\r\n\r\n//           <label>Final Remark</label>\r\n//           <textarea\r\n//             name=\"remark\"\r\n//             rows=\"3\"\r\n//             value={formData.remark}\r\n//             onChange={handleChange}\r\n//           ></textarea>\r\n\r\n//           <label>Stage</label>\r\n//           <select name=\"stage\" value={formData.stage} onChange={handleChange} required>\r\n//             <option value=\"\">Select Stage</option>\r\n//             {stageOptions.map((s, i) => (\r\n//               <option key={i} value={s}>\r\n//                 {s}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n\r\n//           <button type=\"submit\" className=\"submit-btn\">\r\n//             Submit\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default DynamicForm;\r\n"],"names":["masterCategories","setMasterCategories","useState","categories","setCategories","subCategories","setSubCategories","states","setStates","cities","setCities","products","setProducts","formData","setFormData","masterCategory","category","subCategory","state","city","brandName","brandContact","ownerName","ownerContact","contactPersonName","contactPersonNumber","callDate","callTime","callRemark","meetingDate","meetingTime","meetingRemark","product","offerPrice","counterPrice","remark","useEffect","axios","get","then","res","Array","isArray","data","catch","err","console","error","concat","prev","_objectSpread","id","name","handleChange","e","value","target","sanitizedValue","replace","_jsxs","_Fragment","children","_jsx","Sidebar","className","onSubmit","preventDefault","log","post","alert","type","onChange","required","pattern","title","rows","map","p","stage","s","i"],"sourceRoot":""}